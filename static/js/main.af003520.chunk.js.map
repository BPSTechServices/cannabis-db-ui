{"version":3,"sources":["Nav.jsx","Title.jsx","WhatsNew.jsx","IntakeRowForm.jsx","ApiCaller.js","AddViaSpreadSheetForm.jsx","AddNewEntries.jsx","IntakeTableFilters.jsx","IntakeTableHead.jsx","IntakeTableRow.jsx","IntakeTableToolbar.jsx","IntakeTable.jsx","SeeTheData.jsx","VisualizeWithTableau.jsx","LoginDialog.jsx","serviceWorker.js","index.js","App.jsx"],"names":["Nav","props","Tabs","value","navValue","onChange","onNavChange","indicatorColor","textColor","centered","Tab","label","Title","className","SeeTheData","makeField","field","handleChange","TextField","style","marginBottom","fullWidth","variant","defaultValue","IntakeRowForm","isDialog","dialogOpen","onDialogClose","row","onSubmit","theRow","useState","rowValue","setRowValue","submission_date","submissionDateValue","setSubmissionDateValue","entity","entityValue","setEntityValue","dba","dbaValue","setDbaValue","facility_address","facilityAddressValue","setFacilityAddressValue","facility_suite","facilitySuiteNoValue","setFacilitySuiteNoValue","facility_zip","facilityZipValue","setFacilityZipValue","mailing_address","mailingAddressValue","setMailingAddressValue","mrl","mrlValue","setMrlValue","neighborhood_association","neighborhoodAssocValue","setneighborhoodAssocValue","compliance_region","complianceRegionValue","setComplianceRegionValue","primary_contact_first_name","firstNameValue","setFirstNameValue","primary_contact_last_name","lastNameValue","setLastNameValue","email","emailValue","setEmailValue","phone","phoneValue","setPhoneValue","endorse_type","endorseTypeValue","setEndorseTypeValue","license_type","licenseTypeValue","setLicenseTypeValue","repeat_location","repeatLocationValue","setRepeatLocationValue","app_complete","appCompleteValue","setAppCompleteValue","fee_schedule","feeScheduleValue","setFeeScheduleValue","receipt_num","receiptNoValue","setReceiptNoValue","cash_amount","cashAmountValue","setCashAmountValue","check_amount","checkAmountValue","setCheckAmountValue","card_amount","cardAmountValue","setCardAmountValue","check_num_approval_code","checkNoValue","setCheckNoValue","mrl_num","mrlNoValue","setMrlNoValue","notes","notesValue","setNotesValue","onSubmitClick","_","formFields","e","target","Dialog","open","onClose","onEnter","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","onClick","color","a","fetch","then","res","json","queryWhere","query","table","where","method","headers","body","JSON","stringify","file","data","FormData","append","name","returnCode","rowEdited","credentials","is_admin","AddViaSpreadSheetForm","files","setFiles","onDrop","acceptedFiles","concat","getRootProps","getInputProps","fontSize","length","List","dense","map","index","ListItem","key","ListItemText","addPromises","forEach","push","addFile","console","log","Promise","all","AddNewEntries","isUserAdmin","Container","maxWidth","Grid","container","spacing","item","xs","sm","md","rowToAdd","addRow","Typography","align","IntakeTableFilters","allColumns","whereValue","setWhereValue","columns","setColumns","onFilterClick","event","preventDefault","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","width","InputLabel","id","Select","labelId","multiple","input","Input","renderValue","selected","elem","Chip","column","MenuItem","marginTop","ExpansionPanelActions","IntakeTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","property","IntakeTableRow","onRowClick","isRowSelected","shownColumns","makeCellKey","isColumnShown","includes","hover","role","aria-checked","tabIndex","IntakeTableToolbar","onDeleteRows","onRefreshTable","onEditRow","Toolbar","Tooltip","title","IconButton","aria-label","header","descendingComparator","b","IntakeTable","setOrder","setOrderBy","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","editDialogOpen","setEditDialogOpen","setShownColumns","rows","setRows","shownHeaders","filter","refreshTable","getIntakeTable","useEffect","rowNumber","emptyRows","Math","min","onFilterSubmit","filterIntakeTable","catch","err","deletePromises","deleteRow","TableContainer","Table","size","newSelecteds","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","selectedIndex","indexOf","newSelected","handleRowClick","height","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","find","newRow","editRow","VisualizeWithTableau","src","frameBorder","allow","allowFullScreen","marginRight","LoginDialog","setEmail","password","setPassword","type","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","grey","secondary","ReactDOM","render","ThemeProvider","CssBaseline","setNavValue","loginDialogOpen","setLoginDialogOpen","username","setUsername","isUserLoggedIn","setIsUserLoggedIn","setIsUserAdmin","margin","float","logout","newValue","getComponentMatchingNavValue","login","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.af003520.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\n\r\nexport default function Nav(props) {\r\n  return (\r\n    <Tabs\r\n      value={props.navValue}\r\n      onChange={props.onNavChange}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      centered\r\n    >\r\n      <Tab label=\"What's New?\" />\r\n      <Tab label=\"Add new entries\" />\r\n      <Tab label=\"See the data\" />\r\n      <Tab label=\"Visualize with Tableau\" />\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function Title() {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        Kanabi\r\n      </div>\r\n      <div className=\"subtitle\">\r\n        by PSU FireAnts capstone team\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SeeTheData() {\r\n  return (\r\n    <div>\r\n      <h1>What's new?</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextField, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport './style.css';\r\n\r\nexport const makeField = (field, value = '', handleChange) =>\r\n  <TextField\r\n    style={{ marginBottom: '1rem' }}\r\n    fullWidth\r\n    label={field}\r\n    variant=\"outlined\"\r\n    onChange={handleChange}\r\n    defaultValue={value}\r\n  />;\r\n\r\nexport default function IntakeRowForm(props) {\r\n  const { isDialog, dialogOpen, onDialogClose, row, onSubmit } = props;\r\n\r\n  // row could be undefined, in this case we let row be empty strings\r\n  const theRow = row || {\r\n    \"row\": \"\",\r\n    \"Submission date\": \"\",\r\n    \"Entity\": \"\",\r\n    \"DBA\": \"\",\r\n    \"Facility Address\": \"\",\r\n    \"Facility Suite #\": \"\",\r\n    \"Facility Zip\": \"\",\r\n    \"Mailing Address\": \"\",\r\n    \"MRL\": \"\",\r\n    \"Neighborhood Association\": \"\",\r\n    \"Compliance Region\": \"\",\r\n    \"Primary Contact First Name\": \"\",\r\n    \"Primary Contact Last Name\": \"\",\r\n    \"Email\": \"\",\r\n    \"Phone\": \"\",\r\n    \"Endorse Type\": \"\",\r\n    \"License Type\": \"\",\r\n    \"Repeat location?\": \"\",\r\n    \"App complete?\": \"\",\r\n    \"Fee Schedule\": \"\",\r\n    \"Receipt No.\": \"\",\r\n    \"Cash Amount\": \"\",\r\n    \"Check Amount\": \"\",\r\n    \"Card Amount\": \"\",\r\n    \"Check No. / Approval Code\": \"\",\r\n    \"MRL#\": \"\",\r\n    \"Notes\": \"\"\r\n  };\r\n\r\n  const [rowValue, setRowValue] = useState(theRow.row);\r\n  const [submissionDateValue, setSubmissionDateValue] = useState(theRow.submission_date);\r\n  const [entityValue, setEntityValue] = useState(theRow.entity);\r\n  const [dbaValue, setDbaValue] = useState(theRow.dba);\r\n  const [facilityAddressValue, setFacilityAddressValue] = useState(theRow.facility_address);\r\n  const [facilitySuiteNoValue, setFacilitySuiteNoValue] = useState(theRow.facility_suite);\r\n  const [facilityZipValue, setFacilityZipValue] = useState(theRow.facility_zip);\r\n  const [mailingAddressValue, setMailingAddressValue] = useState(theRow.mailing_address);\r\n  const [mrlValue, setMrlValue] = useState(theRow.mrl);\r\n  const [neighborhoodAssocValue, setneighborhoodAssocValue] = useState(theRow.neighborhood_association);\r\n  const [complianceRegionValue, setComplianceRegionValue] = useState(theRow.compliance_region);\r\n  const [firstNameValue, setFirstNameValue] = useState(theRow.primary_contact_first_name);\r\n  const [lastNameValue, setLastNameValue] = useState(theRow.primary_contact_last_name);\r\n  const [emailValue, setEmailValue] = useState(theRow.email);\r\n  const [phoneValue, setPhoneValue] = useState(theRow.phone);\r\n  const [endorseTypeValue, setEndorseTypeValue] = useState(theRow.endorse_type);\r\n  const [licenseTypeValue, setLicenseTypeValue] = useState(theRow.license_type);\r\n  const [repeatLocationValue, setRepeatLocationValue] = useState(theRow.repeat_location);\r\n  const [appCompleteValue, setAppCompleteValue] = useState(theRow.app_complete);\r\n  const [feeScheduleValue, setFeeScheduleValue] = useState(theRow.fee_schedule);\r\n  const [receiptNoValue, setReceiptNoValue] = useState(theRow.receipt_num);\r\n  const [cashAmountValue, setCashAmountValue] = useState(theRow.cash_amount);\r\n  const [checkAmountValue, setCheckAmountValue] = useState(theRow.check_amount);\r\n  const [cardAmountValue, setCardAmountValue] = useState(theRow.card_amount);\r\n  const [checkNoValue, setCheckNoValue] = useState(theRow.check_num_approval_code);\r\n  const [mrlNoValue, setMrlNoValue] = useState(theRow.mrl_num);\r\n  const [notesValue, setNotesValue] = useState(theRow.notes);\r\n\r\n  // Update states every time the dialog opens\r\n  const onDialogEnter = () => {\r\n    setRowValue(theRow.row);\r\n    setSubmissionDateValue(theRow.submission_date);\r\n    setEntityValue(theRow.entity);\r\n    setDbaValue(theRow.dba);\r\n    setFacilityAddressValue(theRow.facility_address);\r\n    setFacilitySuiteNoValue(theRow.facility_suite);\r\n    setFacilityZipValue(theRow.facility_zip);\r\n    setMailingAddressValue(theRow.mailing_address);\r\n    setMrlValue(theRow.mrl);\r\n    setneighborhoodAssocValue(theRow.neighborhood_association);\r\n    setComplianceRegionValue(theRow.compliance_region);\r\n    setFirstNameValue(theRow.primary_contact_first_name);\r\n    setLastNameValue(theRow.primary_contact_last_name);\r\n    setEmailValue(theRow.email);\r\n    setPhoneValue(theRow.phone);\r\n    setEndorseTypeValue(theRow.endorse_type);\r\n    setLicenseTypeValue(theRow.license_type);\r\n    setRepeatLocationValue(theRow.repeat_location);\r\n    setAppCompleteValue(theRow.app_complete);\r\n    setFeeScheduleValue(theRow.fee_schedule);\r\n    setReceiptNoValue(theRow.receipt_num);\r\n    setCashAmountValue(theRow.cash_amount);\r\n    setCheckAmountValue(theRow.check_amount);\r\n    setCardAmountValue(theRow.card_amount);\r\n    setCheckNoValue(theRow.check_num_approval_code);\r\n    setMrlNoValue(theRow.mrl_num);\r\n    setNotesValue(theRow.notes);\r\n  };\r\n\r\n  const makeRowToSubmit = () => {\r\n    return {\r\n      \"row\": rowValue,\r\n      \"Submission date\": submissionDateValue,\r\n      \"Entity\": entityValue,\r\n      \"DBA\": dbaValue,\r\n      \"Facility Address\": facilityAddressValue,\r\n      \"Facility Suite #\": facilitySuiteNoValue,\r\n      \"Facility Zip\": facilityZipValue,\r\n      \"Mailing Address\": mailingAddressValue,\r\n      \"MRL\": mrlValue,\r\n      \"Neighborhood Association\": neighborhoodAssocValue,\r\n      \"Compliance Region\": complianceRegionValue,\r\n      \"Primary Contact First Name\": firstNameValue,\r\n      \"Primary Contact Last Name\": lastNameValue,\r\n      \"Email\": emailValue,\r\n      \"Phone\": phoneValue,\r\n      \"Endorse Type\": endorseTypeValue,\r\n      \"License Type\": licenseTypeValue,\r\n      \"Repeat location?\": repeatLocationValue,\r\n      \"App complete?\": appCompleteValue,\r\n      \"Fee Schedule\": feeScheduleValue,\r\n      \"Receipt No.\": receiptNoValue,\r\n      \"Cash Amount\": cashAmountValue,\r\n      \"Check Amount\": checkAmountValue,\r\n      \"Card Amount\": cardAmountValue,\r\n      \"Check No. / Approval Code\": checkNoValue,\r\n      \"MRL#\": mrlNoValue,\r\n      \"Notes\": notesValue\r\n    };\r\n  };\r\n\r\n  const onSubmitClick = _ => {\r\n    onSubmit(makeRowToSubmit());\r\n\r\n    if (isDialog) {\r\n      onDialogClose();\r\n    }\r\n  };\r\n\r\n  const formFields = () =>\r\n    <>\r\n      {makeField('row', theRow.row, e => setRowValue(e.target.value))}\r\n      {makeField('Submission date', theRow.submission_date, e => setSubmissionDateValue(e.target.value))}\r\n      {makeField('Entity', theRow.entity, e => setEntityValue(e.target.value))}\r\n      {makeField('DBA', theRow.dba, e => setDbaValue(e.target.value))}\r\n      {makeField('Facility Address', theRow.facility_address, e => setFacilityAddressValue(e.target.value))}\r\n      {makeField('Facility Suite #', theRow.facility_suite, e => setFacilitySuiteNoValue(e.target.value))}\r\n      {makeField('Facility Zip', theRow.facility_zip, e => setFacilityZipValue(e.target.value))}\r\n      {makeField('Mailing Address', theRow.mailing_address, e => setMailingAddressValue(e.target.value))}\r\n      {makeField('MRL', theRow.mrl, e => setMrlValue(e.target.value))}\r\n      {makeField('Neighborhood Association', theRow.neighborhood_association, e => setneighborhoodAssocValue(e.target.value))}\r\n      {makeField('Compliance Region', theRow.compliance_region, e => setComplianceRegionValue(e.target.value))}\r\n      {makeField('Primary Contact First Name', theRow.primary_contact_first_name, e => setFirstNameValue(e.target.value))}\r\n      {makeField('Primary Contact Last Name', theRow.primary_contact_last_name, e => setLastNameValue(e.target.value))}\r\n      {makeField('Email', theRow.email, e => setEmailValue(e.target.value))}\r\n      {makeField('Phone', theRow.phone, e => setPhoneValue(e.target.value))}\r\n      {makeField('Endorse Type', theRow.endorse_type, e => setEndorseTypeValue(e.target.value))}\r\n      {makeField('License Type', theRow.license_type, e => setLicenseTypeValue(e.target.value))}\r\n      {makeField('Repeat location?', theRow.repeat_location, e => setRepeatLocationValue(e.target.value))}\r\n      {makeField('App complete?', theRow.app_complete, e => setAppCompleteValue(e.target.value))}\r\n      {makeField('Fee Schedule', theRow.fee_schedule, e => setFeeScheduleValue(e.target.value))}\r\n      {makeField('Receipt No.', theRow.receipt_num, e => setReceiptNoValue(e.target.value))}\r\n      {makeField('Cash Amount', theRow.cash_amount, e => setCashAmountValue(e.target.value))}\r\n      {makeField('Check Amount', theRow.check_amount, e => setCheckAmountValue(e.target.value))}\r\n      {makeField('Card Amount', theRow.card_amount, e => setCardAmountValue(e.target.value))}\r\n      {makeField('Check No. / Approval Code', theRow.check_num_approval_code, e => setCheckNoValue(e.target.value))}\r\n      {makeField('MRL#', theRow.mrl_num, e => setMrlNoValue(e.target.value))}\r\n      {makeField('Notes', theRow.notes, e => setNotesValue(e.target.value))}\r\n    </>;\r\n\r\n  if (isDialog === true) {\r\n    return (\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={onDialogClose}\r\n        onEnter={onDialogEnter}\r\n        aria-labelledby=\"intake-row-form-dialog\"\r\n      >\r\n        <DialogTitle>Edit row {theRow.row}</DialogTitle>\r\n        <DialogContent>\r\n          {formFields()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onDialogClose} color=\"secondary\">Cancel</Button>\r\n          <Button onClick={onSubmitClick} color=\"primary\">Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  } else {\r\n    return (\r\n      <form>\r\n        {formFields()}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitClick}>Submit</Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export async function getIntakeTable() {\r\n  return fetch('https://capstone.sugar.coffee/list?table=intake').then(res => res.json());\r\n}\r\n\r\nexport async function filterIntakeTable(queryWhere) {\r\n  const query = {\r\n    table: 'intake',\r\n    where: queryWhere,\r\n  }\r\n\r\n  return fetch('https://capstone.sugar.coffee/query', {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(query),\r\n  }).then(res => res.json())\r\n}\r\n\r\nexport async function addRow(row) {\r\n  return fetch('https://capstone.sugar.coffee/load?table=intake', {\r\n    method: 'put',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(row),\r\n  }).then(res => res.json())\r\n}\r\n\r\nexport async function addFile(file) {\r\n  const data = new FormData();\r\n  data.append('file', file, file.name);\r\n\r\n  return fetch('https://capstone.sugar.coffee/load', {\r\n    method: 'post',\r\n    body: data,\r\n  }).then(res => res.json())\r\n}\r\n\r\nexport async function deleteRow(row) {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n\r\nexport async function editRow(row) {\r\n  return {\r\n    returnCode: 200,\r\n    rowEdited: row,\r\n  }\r\n}\r\n\r\nexport async function login(credentials) {\r\n  return {\r\n    email: 'admin@gmail.com',\r\n    name: 'admin',\r\n    is_admin: true,\r\n  }\r\n}\r\n\r\nexport async function logout(credentials) {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Button, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport './style.css';\r\nimport { addFile } from './ApiCaller';\r\n\r\nexport default function AddViaSpreadSheetForm() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onSubmit = _ => {\r\n    if (files.length > 0) {\r\n      let addPromises = [];\r\n\r\n      files.forEach(file => {\r\n        addPromises.push(addFile(file).then(res => console.log(res, file)));\r\n      });\r\n\r\n      Promise.all(addPromises).then(() => {\r\n        console.log('all files submitted');\r\n        setFiles([]);\r\n      });\r\n    } else {\r\n      console.log('no files to submit');\r\n    }\r\n  }\r\n\r\n  const onFilesDrop = acceptedFiles => {\r\n    setFiles(files.concat(acceptedFiles))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dropzone onDrop={onFilesDrop}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <CloudUploadIcon style={{ fontSize: \"4rem\" }} />\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Click to upload spreadsheets\r\n            </Button>\r\n            <p>or drag and drop them here</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      {(files.length > 0) ?\r\n        <List dense>\r\n          {files.map((file, index) =>\r\n            <ListItem key={`file-${index}`}>\r\n              <ListItemText>{file.name}</ListItemText>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        : null}\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Submit</Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './style.css';\r\nimport IntakeRowForm from './IntakeRowForm';\r\nimport AddViaSpreadSheetForm from './AddViaSpreadSheetForm';\r\nimport { addRow } from './ApiCaller';\r\n\r\nexport default function AddNewEntries(props) {\r\n  const { isUserAdmin } = props;\r\n\r\n  const onAddAnEntry = rowToAdd => {\r\n    addRow(rowToAdd).then(res => console.log(res));\r\n  }\r\n\r\n  if (isUserAdmin) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <Container maxWidth=\"md\">\r\n              <h1>Add entries via spreadsheets</h1>\r\n              <AddViaSpreadSheetForm />\r\n            </Container>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={8}>\r\n            <Container maxWidth=\"md\">\r\n              <h1>Add an entry</h1>\r\n              <IntakeRowForm onSubmit={onAddAnEntry} />\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"body1\" align=\"center\">You are not an admin. Please log in.</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Typography, Button, Select, InputLabel, Input, MenuItem, Chip, TextField } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nexport default function IntakeTableFilters(props) {\r\n  const { onSubmit, allColumns } = props;\r\n\r\n  const [whereValue, setWhereValue] = useState('');\r\n  const [columns, setColumns] = useState(allColumns);\r\n\r\n  const onFilterClick = event => {\r\n    event.preventDefault();\r\n    const query = {\r\n      table: 'intake',\r\n      columns: columns,\r\n      where: whereValue,\r\n    }\r\n    onSubmit(query);\r\n  }\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel-content\"\r\n      >\r\n        <FilterListIcon />\r\n        <Typography>Filters</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <form style={{ width: '100%' }} onSubmit={onFilterClick}>\r\n          <InputLabel id=\"columns-label\">Columns</InputLabel>\r\n          <Select\r\n            labelId=\"columns-label\"\r\n            id=\"columns-select\"\r\n            multiple\r\n            value={columns}\r\n            onChange={e => setColumns(e.target.value)}\r\n            input={<Input />}\r\n            renderValue={selected => selected.map(elem => <Chip key={elem} label={elem} />)}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {allColumns.map(column =>\r\n              <MenuItem key={column} value={column}>{column}</MenuItem>\r\n            )}\r\n          </Select>\r\n          <TextField\r\n            style={{ marginTop: '1rem' }}\r\n            fullWidth\r\n            label=\"Where\"\r\n            onChange={e => setWhereValue(e.target.value)}\r\n          />\r\n        </form>\r\n      </ExpansionPanelDetails>\r\n      <ExpansionPanelActions>\r\n        <Button onClick={onFilterClick}>Filter</Button>\r\n      </ExpansionPanelActions>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TableCell, TableHead, TableRow, TableSortLabel, Checkbox } from '@material-ui/core';\r\n\r\nexport default function IntakeTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headers } = props;\r\n\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headers.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TableCell, TableRow, Checkbox } from '@material-ui/core';\r\n\r\nexport default function IntakeTableRow(props) {\r\n  const { onRowClick, isRowSelected, index, row, shownColumns } = props;\r\n\r\n  const labelId = `intake-table-checkbox-${index}`;\r\n  const makeCellKey = property => `intake-table-cell-${index}-${property}`;\r\n\r\n  const isColumnShown = column => shownColumns.includes(column);\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      onClick={onRowClick}\r\n      role=\"checkbox\"\r\n      aria-checked={isRowSelected}\r\n      tabIndex={-1}\r\n      key={row[\"row\"]}\r\n      selected={isRowSelected}\r\n    >\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox\r\n          checked={isRowSelected}\r\n          inputProps={{ 'aria-labelledby': labelId }}\r\n        />\r\n      </TableCell>\r\n      {isColumnShown('row') && <TableCell key={makeCellKey('row')} align=\"right\">{row.row}</TableCell>}\r\n      {isColumnShown('Submission date') && <TableCell key={makeCellKey('Submission date')} align=\"left\">{row.submission_date}</TableCell>}\r\n      {isColumnShown('Entity') && <TableCell key={makeCellKey('Entity')} align=\"left\">{row.entity}</TableCell>}\r\n      {isColumnShown('DBA') && <TableCell key={makeCellKey('DBA')} align=\"left\">{row.dba}</TableCell>}\r\n      {isColumnShown('Facility Address') && <TableCell key={makeCellKey('Facility Address')} align=\"left\">{row.facility_address}</TableCell>}\r\n      {isColumnShown('Facility Suite #') && <TableCell key={makeCellKey('Facility Suite #')} align=\"right\">{row.facility_suite}</TableCell>}\r\n      {isColumnShown('Facility Zip') && <TableCell key={makeCellKey('Facility Zip')} align=\"right\">{row.facility_zip}</TableCell>}\r\n      {isColumnShown('Mailing Address') && <TableCell key={makeCellKey('Mailing Address')} align=\"left\">{row.mailing_address}</TableCell>}\r\n      {isColumnShown('MRL') && <TableCell key={makeCellKey('MRL')} align=\"left\">{row.mrl}</TableCell>}\r\n      {isColumnShown('Neighborhood Association') && <TableCell key={makeCellKey('Neighborhood Association')} align=\"left\">{row.neighborhood_association}</TableCell>}\r\n      {isColumnShown('Compliance Region') && <TableCell key={makeCellKey('Compliance Region')} align=\"left\">{row.compliance_region}</TableCell>}\r\n      {isColumnShown('Primary Contact First Name') && <TableCell key={makeCellKey('Primary Contact First Name')} align=\"left\">{row.primary_contact_first_name}</TableCell>}\r\n      {isColumnShown('Primary Contact Last Name') && <TableCell key={makeCellKey('Primary Contact Last Name')} align=\"left\">{row.primary_contact_last_name}</TableCell>}\r\n      {isColumnShown('Email') && <TableCell key={makeCellKey('Email')} align=\"left\">{row.email}</TableCell>}\r\n      {isColumnShown('Phone') && <TableCell key={makeCellKey('Phone')} align=\"left\">{row.phone}</TableCell>}\r\n      {isColumnShown('Endorse Type') && <TableCell key={makeCellKey('Endorse Type')} align=\"left\">{row.endorse_type}</TableCell>}\r\n      {isColumnShown('License Type') && <TableCell key={makeCellKey('License Type')} align=\"left\">{row.license_type}</TableCell>}\r\n      {isColumnShown('Repeat location?') && <TableCell key={makeCellKey('Repeat location?')} align=\"left\">{row.repeat_location}</TableCell>}\r\n      {isColumnShown('App complete?') && <TableCell key={makeCellKey('App complete?')} align=\"left\">{row.app_complete}</TableCell>}\r\n      {isColumnShown('Fee Schedule') && <TableCell key={makeCellKey('Fee Schedule')} align=\"left\">{row.fee_schedule}</TableCell>}\r\n      {isColumnShown('Receipt No.') && <TableCell key={makeCellKey('Receipt No.')} align=\"left\">{row.receipt_num}</TableCell>}\r\n      {isColumnShown('Cash Amount') && <TableCell key={makeCellKey('Cash Amount')} align=\"left\">{row.cash_amount}</TableCell>}\r\n      {isColumnShown('Check Amount') && <TableCell key={makeCellKey('Check Amount')} align=\"left\">{row.check_amount}</TableCell>}\r\n      {isColumnShown('Card Amount') && <TableCell key={makeCellKey('Card Amount')} align=\"left\">{row.card_amount}</TableCell>}\r\n      {isColumnShown('Check No. / Approval Code') && <TableCell key={makeCellKey('Check No. / Approval Code')} align=\"right\">{row.check_num_approval_code}</TableCell>}\r\n      {isColumnShown('MRL#') && <TableCell key={makeCellKey('MRL#')} align=\"left\">{row.mrl_num}</TableCell>}\r\n      {isColumnShown('Notes') && <TableCell key={makeCellKey('Notes')} align=\"left\">{row.notes}</TableCell>}\r\n    </TableRow>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Toolbar, Typography, Tooltip, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nexport default function IntakeTableToolbar(props) {\r\n  const { numSelected, onDeleteRows, onRefreshTable, onEditRow, isUserAdmin } = props;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography variant=\"h6\">Intake</Typography>\r\n      <Tooltip title=\"Refresh\">\r\n        <IconButton aria-label=\"refresh-table\" onClick={onRefreshTable}><RefreshIcon /></IconButton>\r\n      </Tooltip>\r\n      {(numSelected === 1 && isUserAdmin === true) ?\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit-row\" onClick={onEditRow}><EditIcon /></IconButton>\r\n        </Tooltip> : null}\r\n      {(numSelected > 0 && isUserAdmin === true) ?\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete-rows\" onClick={onDeleteRows}><DeleteIcon /></IconButton>\r\n        </Tooltip> : null}\r\n      <Typography variant=\"subtitle1\">{numSelected} selected</Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, FormControlLabel, Switch, Typography } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport './style.css';\r\nimport { getIntakeTable, deleteRow, filterIntakeTable, editRow } from './ApiCaller';\r\nimport IntakeTableFilters from './IntakeTableFilters';\r\nimport IntakeRowForm from './IntakeRowForm';\r\nimport IntakeTableHead from './IntakeTableHead';\r\nimport IntakeTableRow from './IntakeTableRow';\r\nimport IntakeTableToolbar from './IntakeTableToolbar';\r\n\r\nconst headers = [\r\n  { id: 'row', numeric: true, label: 'row' },\r\n  { id: 'Submission date', numeric: false, label: 'Submission date' },\r\n  { id: 'Entity', numeric: false, label: 'Entity' },\r\n  { id: 'DBA', numeric: false, label: 'DBA' },\r\n  { id: 'Facility Address', numeric: false, label: 'Facility Address' },\r\n  { id: 'Facility Suite #', numeric: true, label: 'Facility Suite #' },\r\n  { id: 'Facility Zip', numeric: true, label: 'Facility Zip' },\r\n  { id: 'Mailing Address', numeric: false, label: 'Mailing Address' },\r\n  { id: 'MRL', numeric: false, label: 'MRL' },\r\n  { id: 'Neighborhood Association', numeric: false, label: 'Neighborhood Association' },\r\n  { id: 'Compliance Region', numeric: false, label: 'Compliance Region' },\r\n  { id: 'Primary Contact First Name', numeric: false, label: 'Primary Contact First Name' },\r\n  { id: 'Primary Contact Last Name', numeric: false, label: 'Primary Contact Last Name' },\r\n  { id: 'Email', numeric: false, label: 'Email' },\r\n  { id: 'Phone', numeric: false, label: 'Phone' },\r\n  { id: 'Endorse Type', numeric: false, label: 'Endorse Type' },\r\n  { id: 'License Type', numeric: false, label: 'License Type' },\r\n  { id: 'Repeat location?', numeric: false, label: 'Repeat location?' },\r\n  { id: 'App complete?', numeric: false, label: 'App complete?' },\r\n  { id: 'Fee Schedule', numeric: false, label: 'Fee Schedule' },\r\n  { id: 'Receipt No.', numeric: false, label: 'Receipt No.' },\r\n  { id: 'Cash Amount', numeric: false, label: 'Cash Amount' },\r\n  { id: 'Check Amount', numeric: false, label: 'Check Amount' },\r\n  { id: 'Card Amount', numeric: false, label: 'Card Amount' },\r\n  { id: 'Check No. / Approval Code', numeric: true, label: 'Check No. / Approval Code' },\r\n  { id: 'MRL#', numeric: false, label: 'MRL#' },\r\n  { id: 'Notes', numeric: false, label: 'Notes' },\r\n];\r\n\r\nconst allColumns = headers.map(header => header.label);\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  } else if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nexport default function IntakeTable(props) {\r\n  const { isUserAdmin } = props;\r\n\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('row');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [shownColumns, setShownColumns] = useState(allColumns);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const shownHeaders = headers.filter(header => shownColumns.includes(header.label));\r\n\r\n  const getRow = rowNumber => rows.find(row => row['row'] === rowNumber);\r\n\r\n  const refreshTable = () => {\r\n    getIntakeTable().then(rows => {\r\n      setRows(rows);\r\n      setSelected([]);\r\n    });\r\n    console.log('table refreshed');\r\n  }\r\n\r\n  useEffect(refreshTable, []);\r\n\r\n  const handleRequestSort = (_, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(row => row[\"row\"]);\r\n      setSelected(newSelecteds);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (_, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const onDeleteRows = () => {\r\n    if (selected.length > 0) {\r\n      let deletePromises = [];\r\n\r\n      selected.forEach(rowNumber => {\r\n        deletePromises.push(deleteRow(rowNumber).then(res => console.log(res, rowNumber)));\r\n      });\r\n\r\n      Promise.all(deletePromises).then(() => {\r\n        console.log(`yeeted rows: ${selected}`);\r\n        setSelected([]);\r\n        refreshTable();\r\n      });\r\n    } else {\r\n      console.log('no rows to yeet');\r\n    }\r\n  };\r\n\r\n  const onEditRow = newRow => {\r\n    if (selected.length === 1) {\r\n      editRow(newRow).then(res => console.log(res));\r\n    } else {\r\n      console.log('somehow you selected 0 or more than 1 row to edit');\r\n    }\r\n  }\r\n\r\n  const onFilterSubmit = query => {\r\n    setShownColumns(query.columns);\r\n\r\n    filterIntakeTable(query.where).then(rows => {\r\n      console.log('filtered', rows);\r\n      setRows(rows);\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  if (rows.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <IntakeTableToolbar isUserAdmin={isUserAdmin} numSelected={selected.length} />\r\n        <IntakeTableFilters onSubmit={onFilterSubmit} allColumns={allColumns} />\r\n        <Typography variant=\"body1\" align=\"center\">No data.</Typography>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <IntakeTableToolbar\r\n          isUserAdmin={isUserAdmin}\r\n          numSelected={selected.length}\r\n          onDeleteRows={onDeleteRows}\r\n          onEditRow={() => setEditDialogOpen(true)}\r\n          onRefreshTable={refreshTable} />\r\n        <IntakeTableFilters onSubmit={onFilterSubmit} allColumns={allColumns} />\r\n        <TableContainer>\r\n          <Table\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"Data table\"\r\n          >\r\n            <IntakeTableHead\r\n              headers={shownHeaders}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) =>\r\n                  <IntakeTableRow\r\n                    key={index}\r\n                    onRowClick={event => handleRowClick(event, row[\"row\"])}\r\n                    isRowSelected={isSelected(row[\"row\"])}\r\n                    index={index}\r\n                    row={row}\r\n                    shownColumns={shownColumns}\r\n                  />\r\n                )}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n        <IntakeRowForm\r\n          isDialog={true}\r\n          row={getRow(selected[0])}\r\n          dialogOpen={editDialogOpen}\r\n          onDialogClose={() => setEditDialogOpen(false)}\r\n          onSubmit={onEditRow}\r\n        ></IntakeRowForm>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport IntakeTable from './IntakeTable';\r\n\r\nexport default function SeeTheData(props) {\r\n  const { isUserAdmin } = props;\r\n\r\n  return (\r\n    <IntakeTable isUserAdmin={isUserAdmin} />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function VisualizeWithTableau() {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <iframe title=\"youtube\" width=\"100%\" height=\"500\" src=\"https://www.youtube-nocookie.com/embed/dQw4w9WgXcQ\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n      <Button style={{ marginRight: '1rem' }} variant=\"outlined\" color=\"primary\">\r\n        Download this workbook\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Open in Tableau Desktop\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\nimport { makeField } from './IntakeRowForm';\r\n\r\nexport default function LoginDialog(props) {\r\n  const { open, onClose, onSubmit } = props;\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onSubmitClick = () => {\r\n\r\n    if (email.length > 0 && password.length > 0) {\r\n      const userCredentials = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n\r\n      onSubmit(userCredentials)\r\n    } else {\r\n      console.log('must enter both email and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"login-dialog\">\r\n      <DialogTitle>Login</DialogTitle>\r\n      <DialogContent>\r\n        {makeField('Email', '', e => setEmail(e.target.value))}\r\n        <TextField\r\n          style={{ marginBottom: '1rem' }}\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n        <Button onClick={onSubmitClick} color=\"primary\">Submit</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n    secondary: {\r\n      main: grey[600],\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from 'react';\r\nimport { Grid, Button, Typography } from '@material-ui/core';\r\nimport Nav from './Nav';\r\nimport Title from './Title';\r\nimport WhatsNew from './WhatsNew';\r\nimport AddNewEntries from './AddNewEntries';\r\nimport SeeTheData from './SeeTheData';\r\nimport VisualizeWithTableau from './VisualizeWithTableau';\r\nimport LoginDialog from './LoginDialog';\r\nimport { login, logout } from './ApiCaller';\r\n\r\nexport default function App() {\r\n  const [navValue, setNavValue] = useState(2);\r\n  const [loginDialogOpen, setLoginDialogOpen] = useState(false);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\r\n\r\n  const onLogin = credentials => {\r\n    setLoginDialogOpen(false);\r\n    login(credentials)\r\n      .then(res => {\r\n        console.log(res, credentials, 'logged in');\r\n        setIsUserLoggedIn(true);\r\n        setUsername(res.name)\r\n        if (res.is_admin === true) {\r\n          setIsUserAdmin(true);\r\n        } else {\r\n          setIsUserAdmin(false);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const onLogout = () => {\r\n    logout()\r\n      .then(res => {\r\n        console.log(\"login'nt\", res);\r\n        setIsUserAdmin(false);\r\n        setIsUserLoggedIn(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  const onNavChange = (_, newValue) => {\r\n    setNavValue(newValue);\r\n  }\r\n\r\n  const getComponentMatchingNavValue = () => {\r\n    switch (navValue) {\r\n      case 0:\r\n        return <WhatsNew isUserAdmin={isUserAdmin} />;\r\n      case 1:\r\n        return <AddNewEntries isUserAdmin={isUserAdmin} />;\r\n      case 2:\r\n        return <SeeTheData isUserAdmin={isUserAdmin} />;\r\n      case 3:\r\n        return <VisualizeWithTableau isUserAdmin={isUserAdmin} />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6}>\r\n        <Title />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        {isUserLoggedIn ?\r\n          <>\r\n            <Button style={{ margin: '1rem 1rem', float: 'right' }} onClick={onLogout}>Logout</Button>\r\n            <Typography variant=\"body1\" style={{ marginTop: '1.35rem' }} align=\"right\">Hi there, {username}</Typography>\r\n          </> :\r\n          <Button style={{ margin: '1rem 1rem', float: 'right' }} onClick={() => setLoginDialogOpen(true)}>Login</Button>}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Nav navValue={navValue} onNavChange={onNavChange} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {getComponentMatchingNavValue()}\r\n      </Grid>\r\n      <LoginDialog\r\n        open={loginDialogOpen}\r\n        onClose={() => setLoginDialogOpen(false)}\r\n        onSubmit={onLogin}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n"],"sourceRoot":""}