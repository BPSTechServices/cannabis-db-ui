{"version":3,"sources":["Nav.jsx","Title.jsx","WhatsNew.jsx","IntakeRowForm.jsx","MockApi.js","AddViaSpreadSheetForm.jsx","AddNewEntries.jsx","IntakeTableFilters.jsx","IntakeTableHead.jsx","IntakeTableRow.jsx","IntakeTableToolbar.jsx","IntakeTable.jsx","SeeTheData.jsx","VisualizeWithTableau.jsx","LoginDialog.jsx","serviceWorker.js","index.js","App.jsx"],"names":["Nav","props","Tabs","value","navValue","onChange","onNavChange","indicatorColor","textColor","centered","Tab","label","Title","className","SeeTheData","makeField","field","handleChange","TextField","style","marginBottom","fullWidth","variant","defaultValue","formatDate","date","Date","error","reverseFormatDate","padTwoZeros","num","toString","padStart","theDate","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","IntakeRowForm","isDialog","dialogOpen","onDialogClose","row","onSubmit","theRow","useState","rowValue","setRowValue","submissionDateValue","setSubmissionDateValue","entityValue","setEntityValue","dbaValue","setDbaValue","facilityAddressValue","setFacilityAddressValue","facilitySuiteNoValue","setFacilitySuiteNoValue","facilityZipValue","setFacilityZipValue","mailingAddressValue","setMailingAddressValue","mrlValue","setMrlValue","neighborhoodAssocValue","setneighborhoodAssocValue","complianceRegionValue","setComplianceRegionValue","firstNameValue","setFirstNameValue","lastNameValue","setLastNameValue","emailValue","setEmailValue","phoneValue","setPhoneValue","endorseTypeValue","setEndorseTypeValue","licenseTypeValue","setLicenseTypeValue","repeatLocationValue","setRepeatLocationValue","appCompleteValue","setAppCompleteValue","feeScheduleValue","setFeeScheduleValue","receiptNoValue","setReceiptNoValue","cashAmountValue","setCashAmountValue","checkAmountValue","setCheckAmountValue","cardAmountValue","setCardAmountValue","checkNoValue","setCheckNoValue","mrlNoValue","setMrlNoValue","notesValue","setNotesValue","useEffect","onSubmitClick","_","rowToSubmit","Object","values","every","val","length","console","log","formFields","e","target","type","InputLabelProps","shrink","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","onClick","color","a","table","i","key","push","returnCode","data","query","rowAdded","file","rowEdited","credentials","AddViaSpreadSheetForm","files","setFiles","onDrop","acceptedFiles","concat","getRootProps","getInputProps","fontSize","List","dense","map","index","ListItem","ListItemText","name","addPromises","forEach","addFile","then","res","Promise","all","AddNewEntries","Container","maxWidth","Grid","container","spacing","item","xs","sm","md","rowToAdd","addRow","IntakeTableFilters","rowFromValue","setRowFromValue","rowToValue","setRowToValue","submissionDateFromValue","setSubmissionDateFromValue","submissionDateToValue","setSubmissionDateToValue","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","width","margin","event","makeWideField","ExpansionPanelActions","IntakeTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headers","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","property","IntakeTableRow","onRowClick","isRowSelected","labelId","makeCellKey","hover","role","aria-checked","tabIndex","selected","IntakeTableToolbar","onDeleteRows","onRefreshTable","onEditRow","Toolbar","Tooltip","title","IconButton","aria-label","descendingComparator","b","IntakeTable","setOrder","setOrderBy","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","editDialogOpen","setEditDialogOpen","rows","setRows","refreshTable","getIntakeTable","rowNumber","emptyRows","Math","min","deletePromises","deleteRow","filterIntakeTable","TableContainer","Table","size","newSelecteds","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","selectedIndex","indexOf","newSelected","handleRowClick","height","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","find","newRow","editRow","VisualizeWithTableau","src","frameBorder","allow","allowFullScreen","marginRight","LoginDialog","user","setUser","password","setPassword","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","grey","secondary","ReactDOM","render","ThemeProvider","CssBaseline","setNavValue","loginDialogOpen","setLoginDialogOpen","float","newValue","getComponentMatchingNavValue","login","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.751463e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\n\r\nexport default function Nav(props) {\r\n  return (\r\n    <Tabs\r\n      value={props.navValue}\r\n      onChange={props.onNavChange}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      centered\r\n    >\r\n      <Tab label=\"What's New?\" />\r\n      <Tab label=\"Add new entries\" />\r\n      <Tab label=\"See the data\" />\r\n      <Tab label=\"Visualize with Tableau\" />\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function Title() {\r\n  return (\r\n    <div>\r\n      <div className=\"title\">\r\n        Kanabi\r\n      </div>\r\n      <div className=\"subtitle\">\r\n        by PSU FireAnts capstone team\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SeeTheData() {\r\n  return (\r\n    <div>\r\n      <h1>What's new?</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport './style.css';\r\n\r\nexport const makeField = (field, value = '', handleChange) =>\r\n  <TextField\r\n    style={{ marginBottom: '1rem' }}\r\n    fullWidth\r\n    label={field}\r\n    variant=\"outlined\"\r\n    onChange={handleChange}\r\n    defaultValue={value}\r\n  />;\r\n\r\n// Convert from yyyy-MM-dd to Date\r\nexport const formatDate = date => {\r\n  try {\r\n    return new Date(date);\r\n  } catch (error) {\r\n    return 'invalid date format';\r\n  }\r\n}\r\n\r\n// Convert from a date string to yyyy-MM-dd\r\nexport const reverseFormatDate = date => {\r\n  const padTwoZeros = num => num.toString().padStart(2, '0');\r\n  try {\r\n    const theDate = new Date(date);\r\n    const year = theDate.getUTCFullYear();\r\n    const month = padTwoZeros(theDate.getUTCMonth() + 1);\r\n    const day = padTwoZeros(theDate.getUTCDate());\r\n    return `${year}-${month}-${day}`;\r\n  } catch (error) {\r\n    return 'invalid date format';\r\n  }\r\n}\r\n\r\nexport default function IntakeRowForm(props) {\r\n  const { isDialog, dialogOpen, onDialogClose, row, onSubmit } = props;\r\n\r\n  // row could be undefined, in this case we let row be empty strings\r\n  const theRow = row || {\r\n    \"row\": \"\",\r\n    \"Submission date\": \"\",\r\n    \"Entity\": \"\",\r\n    \"DBA\": \"\",\r\n    \"Facility Address\": \"\",\r\n    \"Facility Suite #\": \"\",\r\n    \"Facility Zip\": \"\",\r\n    \"Mailing Address\": \"\",\r\n    \"MRL\": \"\",\r\n    \"Neighborhood Association\": \"\",\r\n    \"Compliance Region\": \"\",\r\n    \"Primary Contact First Name\": \"\",\r\n    \"Primary Contact Last Name\": \"\",\r\n    \"Email\": \"\",\r\n    \"Phone\": \"\",\r\n    \"Endorse Type\": \"\",\r\n    \"License Type\": \"\",\r\n    \"Repeat location?\": \"\",\r\n    \"App complete?\": \"\",\r\n    \"Fee Schedule\": \"\",\r\n    \"Receipt No.\": \"\",\r\n    \"Cash Amount\": \"\",\r\n    \"Check Amount\": \"\",\r\n    \"Card Amount\": \"\",\r\n    \"Check No. / Approval Code\": \"\",\r\n    \"MRL#\": \"\",\r\n    \"Notes\": \"\"\r\n  };\r\n\r\n  const [rowValue, setRowValue] = useState(theRow['row']);\r\n  const [submissionDateValue, setSubmissionDateValue] = useState(theRow['Submission date']);\r\n  const [entityValue, setEntityValue] = useState(theRow['Entity']);\r\n  const [dbaValue, setDbaValue] = useState(theRow['DBA']);\r\n  const [facilityAddressValue, setFacilityAddressValue] = useState(theRow['Facility Address']);\r\n  const [facilitySuiteNoValue, setFacilitySuiteNoValue] = useState(theRow['Facility Suite #']);\r\n  const [facilityZipValue, setFacilityZipValue] = useState(theRow['Facility Zip']);\r\n  const [mailingAddressValue, setMailingAddressValue] = useState(theRow['Mailing Address']);\r\n  const [mrlValue, setMrlValue] = useState(theRow['MRL']);\r\n  const [neighborhoodAssocValue, setneighborhoodAssocValue] = useState(theRow['Neighborhood Association']);\r\n  const [complianceRegionValue, setComplianceRegionValue] = useState(theRow['Compliance Region']);\r\n  const [firstNameValue, setFirstNameValue] = useState(theRow['Primary Contact First Name']);\r\n  const [lastNameValue, setLastNameValue] = useState(theRow['Primary Contact Last Name']);\r\n  const [emailValue, setEmailValue] = useState(theRow['Email']);\r\n  const [phoneValue, setPhoneValue] = useState(theRow['Phone']);\r\n  const [endorseTypeValue, setEndorseTypeValue] = useState(theRow['Endorse Type']);\r\n  const [licenseTypeValue, setLicenseTypeValue] = useState(theRow['License Type']);\r\n  const [repeatLocationValue, setRepeatLocationValue] = useState(theRow['Repeat location?']);\r\n  const [appCompleteValue, setAppCompleteValue] = useState(theRow['App complete?']);\r\n  const [feeScheduleValue, setFeeScheduleValue] = useState(theRow['Fee Schedule']);\r\n  const [receiptNoValue, setReceiptNoValue] = useState(theRow['Receipt No.']);\r\n  const [cashAmountValue, setCashAmountValue] = useState(theRow['Cash Amount']);\r\n  const [checkAmountValue, setCheckAmountValue] = useState(theRow['Check Amount']);\r\n  const [cardAmountValue, setCardAmountValue] = useState(theRow['Card Amount']);\r\n  const [checkNoValue, setCheckNoValue] = useState(theRow['Check No. / Approval Code']);\r\n  const [mrlNoValue, setMrlNoValue] = useState(theRow['MRL#']);\r\n  const [notesValue, setNotesValue] = useState(theRow['Notes']);\r\n\r\n  // Update states every time the dialog opens\r\n  useEffect(() => {\r\n    setRowValue(theRow['row']);\r\n    setSubmissionDateValue(theRow['Submission date']);\r\n    setEntityValue(theRow['Entity']);\r\n    setDbaValue(theRow['DBA']);\r\n    setFacilityAddressValue(theRow['Facility Address']);\r\n    setFacilitySuiteNoValue(theRow['Facility Suite #']);\r\n    setFacilityZipValue(theRow['Facility Zip']);\r\n    setMailingAddressValue(theRow['Mailing Address']);\r\n    setMrlValue(theRow['MRL']);\r\n    setneighborhoodAssocValue(theRow['Neighborhood Association']);\r\n    setComplianceRegionValue(theRow['Compliance Region']);\r\n    setFirstNameValue(theRow['Primary Contact First Name']);\r\n    setLastNameValue(theRow['Primary Contact Last Name']);\r\n    setEmailValue(theRow['Email']);\r\n    setPhoneValue(theRow['Phone']);\r\n    setEndorseTypeValue(theRow['Endorse Type']);\r\n    setLicenseTypeValue(theRow['License Type']);\r\n    setRepeatLocationValue(theRow['Repeat location?']);\r\n    setAppCompleteValue(theRow['App complete?']);\r\n    setFeeScheduleValue(theRow['Fee Schedule']);\r\n    setReceiptNoValue(theRow['Receipt No.']);\r\n    setCashAmountValue(theRow['Cash Amount']);\r\n    setCheckAmountValue(theRow['Check Amount']);\r\n    setCardAmountValue(theRow['Card Amount']);\r\n    setCheckNoValue(theRow['Check No. / Approval Code']);\r\n    setMrlNoValue(theRow['MRL#']);\r\n    setNotesValue(theRow['Notes']);\r\n  }, [isDialog, dialogOpen, theRow]);\r\n\r\n  const makeRowToSubmit = () => {\r\n    return {\r\n      \"row\": rowValue,\r\n      \"Submission date\": submissionDateValue,\r\n      \"Entity\": entityValue,\r\n      \"DBA\": dbaValue,\r\n      \"Facility Address\": facilityAddressValue,\r\n      \"Facility Suite #\": facilitySuiteNoValue,\r\n      \"Facility Zip\": facilityZipValue,\r\n      \"Mailing Address\": mailingAddressValue,\r\n      \"MRL\": mrlValue,\r\n      \"Neighborhood Association\": neighborhoodAssocValue,\r\n      \"Compliance Region\": complianceRegionValue,\r\n      \"Primary Contact First Name\": firstNameValue,\r\n      \"Primary Contact Last Name\": lastNameValue,\r\n      \"Email\": emailValue,\r\n      \"Phone\": phoneValue,\r\n      \"Endorse Type\": endorseTypeValue,\r\n      \"License Type\": licenseTypeValue,\r\n      \"Repeat location?\": repeatLocationValue,\r\n      \"App complete?\": appCompleteValue,\r\n      \"Fee Schedule\": feeScheduleValue,\r\n      \"Receipt No.\": receiptNoValue,\r\n      \"Cash Amount\": cashAmountValue,\r\n      \"Check Amount\": checkAmountValue,\r\n      \"Card Amount\": cardAmountValue,\r\n      \"Check No. / Approval Code\": checkNoValue,\r\n      \"MRL#\": mrlNoValue,\r\n      \"Notes\": notesValue\r\n    };\r\n  };\r\n\r\n  const onSubmitClick = _ => {\r\n    const rowToSubmit = makeRowToSubmit();\r\n    const isFormCompleted = Object.values(rowToSubmit).every(val => val.toString().length > 0);\r\n\r\n    if (isFormCompleted) {\r\n      onSubmit(rowToSubmit);\r\n    } else {\r\n      console.log(\"some fields are missing. form was not submitted\");\r\n    }\r\n\r\n    if (isDialog) {\r\n      onDialogClose();\r\n    }\r\n  };\r\n\r\n  const formFields = () =>\r\n    <>\r\n      {makeField('row', theRow['row'], e => setRowValue(e.target.value))}\r\n      <TextField\r\n        style={{ marginBottom: '1rem' }}\r\n        fullWidth\r\n        label=\"Submission date\"\r\n        variant=\"outlined\"\r\n        type=\"date\"\r\n        InputLabelProps={{ shrink: true }}\r\n        onChange={e => setSubmissionDateValue(formatDate(e.target.value))}\r\n        defaultValue={reverseFormatDate(theRow['Submission date'])}\r\n      />\r\n      {makeField('Entity', theRow['Entity'], e => setEntityValue(e.target.value))}\r\n      {makeField('DBA', theRow['DBA'], e => setDbaValue(e.target.value))}\r\n      {makeField('Facility Address', theRow['Facility Address'], e => setFacilityAddressValue(e.target.value))}\r\n      {makeField('Facility Suite #', theRow['Facility Suite #'], e => setFacilitySuiteNoValue(e.target.value))}\r\n      {makeField('Facility Zip', theRow['Facility Zip'], e => setFacilityZipValue(e.target.value))}\r\n      {makeField('Mailing Address', theRow['Mailing Address'], e => setMailingAddressValue(e.target.value))}\r\n      {makeField('MRL', theRow['MRL'], e => setMrlValue(e.target.value))}\r\n      {makeField('Neighborhood Association', theRow['Neighborhood Association'], e => setneighborhoodAssocValue(e.target.value))}\r\n      {makeField('Compliance Region', theRow['Compliance Region'], e => setComplianceRegionValue(e.target.value))}\r\n      {makeField('Primary Contact First Name', theRow['Primary Contact First Name'], e => setFirstNameValue(e.target.value))}\r\n      {makeField('Primary Contact Last Name', theRow['Primary Contact Last Name'], e => setLastNameValue(e.target.value))}\r\n      {makeField('Email', theRow['Email'], e => setEmailValue(e.target.value))}\r\n      {makeField('Phone', theRow['Phone'], e => setPhoneValue(e.target.value))}\r\n      {makeField('Endorse Type', theRow['Endorse Type'], e => setEndorseTypeValue(e.target.value))}\r\n      {makeField('License Type', theRow['License Type'], e => setLicenseTypeValue(e.target.value))}\r\n      {makeField('Repeat location?', theRow['Repeat location?'], e => setRepeatLocationValue(e.target.value))}\r\n      {makeField('App complete?', theRow['App complete?'], e => setAppCompleteValue(e.target.value))}\r\n      {makeField('Fee Schedule', theRow['Fee Schedule'], e => setFeeScheduleValue(e.target.value))}\r\n      {makeField('Receipt No.', theRow['Receipt No.'], e => setReceiptNoValue(e.target.value))}\r\n      {makeField('Cash Amount', theRow['Cash Amount'], e => setCashAmountValue(e.target.value))}\r\n      {makeField('Check Amount', theRow['Check Amount'], e => setCheckAmountValue(e.target.value))}\r\n      {makeField('Card Amount', theRow['Card Amount'], e => setCardAmountValue(e.target.value))}\r\n      {makeField('Check No. / Approval Code', theRow['Check No. / Approval Code'], e => setCheckNoValue(e.target.value))}\r\n      {makeField('MRL#', theRow['MRL#'], e => setMrlNoValue(e.target.value))}\r\n      {makeField('Notes', theRow['Notes'], e => setNotesValue(e.target.value))}\r\n    </>;\r\n\r\n  if (isDialog === true) {\r\n    return (\r\n      <Dialog open={dialogOpen} onClose={onDialogClose} aria-labelledby=\"intake-row-form-dialog\">\r\n        <DialogTitle>Edit row {theRow['row']}</DialogTitle>\r\n        <DialogContent>\r\n          {formFields()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onDialogClose} color=\"secondary\">Cancel</Button>\r\n          <Button onClick={onSubmitClick} color=\"primary\">Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  } else {\r\n    return (\r\n      <form>\r\n        {formFields()}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitClick}>Submit</Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export const row = {\r\n    \"row\": 222,\r\n    \"Submission date\": \"01/01/2019\",\r\n    \"Entity\": \"The Greenhouse Gases\",\r\n    \"DBA\": \"Boss Nass's\",\r\n    \"Facility Address\": \"197 N Electric Ave\",\r\n    \"Facility Suite #\": \"\",\r\n    \"Facility Zip\": \"97204\",\r\n    \"Mailing Address\": \"100 NE Tabor Dr\",\r\n    \"MRL\": \"MRL48\",\r\n    \"Neighborhood Association\": \"Arbor Lodge\",\r\n    \"Compliance Region\": \"SE\",\r\n    \"Primary Contact First Name\": \"Ashley\",\r\n    \"Primary Contact Last Name\": \"Clark\",\r\n    \"Email\": \"ac@example.com\",\r\n    \"Phone\": \"971-245-0996\",\r\n    \"Endorse Type\": \"EX,CT\",\r\n    \"License Type\": \"MR\",\r\n    \"Repeat location?\": \"N\",\r\n    \"App complete?\": \"Y\",\r\n    \"Fee Schedule\": \"2020\",\r\n    \"Receipt No.\": 67,\r\n    \"Cash Amount\": \"$1500\",\r\n    \"Check Amount\": \"0\",\r\n    \"Card Amount\": \"\",\r\n    \"Check No. / Approval Code\": \"512\",\r\n    \"MRL#\": \"MRL48\",\r\n    \"Notes\": \"\"\r\n  }\r\n\r\nexport async function getIntakeTable() {\r\n  let table = [];\r\n\r\n  for (let i = 0; i < 30; i++) {\r\n    table.push({...row}); // {...row} because if we just push row it'll pass the row by reference\r\n    table[i][\"row\"] = i + 1;\r\n\r\n    for (let key in table[i]) {\r\n      if (key !== \"row\" && key !== \"Submission date\") {\r\n        table[i][key] = table[i][key].toString() + i.toString();\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    returnCode: 200,\r\n    data: table,\r\n  }\r\n}\r\n\r\nexport async function filterIntakeTable(query) {\r\n  let table = [];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    table.push({...row}); // {...row} because if we just push row it'll pass the row by reference\r\n    table[i][\"row\"] = i + 1;\r\n  }\r\n\r\n  return {\r\n    returnCode: 200,\r\n    data: table,\r\n  }\r\n}\r\n\r\nexport async function addRow(row) {\r\n  return {\r\n    returnCode: 200,\r\n    rowAdded: row,\r\n  }\r\n}\r\n\r\nexport async function addFile(file) {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n\r\nexport async function deleteRow(row) {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n\r\nexport async function editRow(row) {\r\n  return {\r\n    returnCode: 200,\r\n    rowEdited: row,\r\n  }\r\n}\r\n\r\nexport async function login(credentials) {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n\r\nexport async function logout(credentials) {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Button, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport './style.css';\r\nimport { addFile } from './MockApi';\r\n\r\nexport default function AddViaSpreadSheetForm() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onSubmit = _ => {\r\n    if (files.length > 0) {\r\n      let addPromises = [];\r\n\r\n      files.forEach(file => {\r\n        addPromises.push(addFile(file).then(res => console.log(res, file)));\r\n      });\r\n\r\n      Promise.all(addPromises).then(() => {\r\n        console.log('all files submitted');\r\n        setFiles([]);\r\n      });\r\n    } else {\r\n      console.log('no files to submit');\r\n    }\r\n  }\r\n\r\n  const onFilesDrop = acceptedFiles => {\r\n    setFiles(files.concat(acceptedFiles))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dropzone onDrop={onFilesDrop}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <CloudUploadIcon style={{ fontSize: \"4rem\" }} />\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Click to upload spreadsheets\r\n            </Button>\r\n            <p>or drag and drop them here</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      {(files.length > 0) ?\r\n        <List dense>\r\n          {files.map((file, index) =>\r\n            <ListItem key={`file-${index}`}>\r\n              <ListItemText>{file.name}</ListItemText>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        : null}\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Submit</Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport './style.css';\r\nimport IntakeRowForm from './IntakeRowForm';\r\nimport AddViaSpreadSheetForm from './AddViaSpreadSheetForm';\r\nimport { addRow } from './MockApi';\r\n\r\nexport default function AddNewEntries() {\r\n  const onAddAnEntry = rowToAdd => {\r\n    addRow(rowToAdd).then(res => console.log(res));\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12} md={4}>\r\n          <Container maxWidth=\"md\">\r\n            <h1>Add entries via spreadsheets</h1>\r\n            <AddViaSpreadSheetForm />\r\n          </Container>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={8}>\r\n          <Container maxWidth=\"md\">\r\n            <h1>Add an entry</h1>\r\n            <IntakeRowForm onSubmit={onAddAnEntry} />\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextField, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Typography, Button } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { makeField as makeWideField, formatDate } from './IntakeRowForm';\r\n\r\nexport default function IntakeTableFilters(props) {\r\n  const { onSubmit } = props;\r\n\r\n  const [rowFromValue, setRowFromValue] = useState('');\r\n  const [rowToValue, setRowToValue] = useState('');\r\n  const [submissionDateFromValue, setSubmissionDateFromValue] = useState('');\r\n  const [submissionDateToValue, setSubmissionDateToValue] = useState('');\r\n  const [entityValue, setEntityValue] = useState('');\r\n\r\n  const onFilterClick = _ => {\r\n    const query = {\r\n      \"row from\": rowFromValue,\r\n      \"row to\": rowToValue,\r\n      \"Submission date from\": submissionDateFromValue,\r\n      \"Submission date to\": submissionDateToValue,\r\n      \"Entity\": entityValue,\r\n    }\r\n\r\n    onSubmit(query);\r\n  }\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel-content\"\r\n      >\r\n        <FilterListIcon />\r\n        <Typography>Filters</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <form style={{ width: '100%' }}>\r\n          <div>\r\n            <TextField style={{ marginBottom: '1rem' }} variant=\"outlined\" label=\"row from\" onChange={e => setRowFromValue(e.target.value)} />\r\n            <TextField style={{ margin: '0 0 1rem 1rem' }} variant=\"outlined\" label=\"row to\" onChange={e => setRowToValue(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              style={{ marginBottom: '1rem' }}\r\n              label=\"Submission date from\"\r\n              variant=\"outlined\"\r\n              type=\"date\"\r\n              InputLabelProps={{ shrink: true }}\r\n              onChange={event => setSubmissionDateFromValue(formatDate(event.target.value))}\r\n            />\r\n            <TextField\r\n              style={{ margin: '0 0 1rem 1rem' }}\r\n              label=\"Submission date to\"\r\n              variant=\"outlined\"\r\n              type=\"date\"\r\n              InputLabelProps={{ shrink: true }}\r\n              onChange={event => setSubmissionDateToValue(formatDate(event.target.value))}\r\n            />\r\n          </div>\r\n          {makeWideField('Entity', '', e => setEntityValue(e.target.value))}\r\n        </form>\r\n      </ExpansionPanelDetails>\r\n      <ExpansionPanelActions>\r\n        <Button onClick={onFilterClick}>Filter</Button>\r\n      </ExpansionPanelActions>\r\n    </ExpansionPanel>\r\n  );\r\n}","import React from 'react';\r\nimport { TableCell, TableHead, TableRow, TableSortLabel, Checkbox } from '@material-ui/core';\r\n\r\nexport default function IntakeTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headers } = props;\r\n\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headers.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TableCell, TableRow, Checkbox } from '@material-ui/core';\r\n\r\nexport default function IntakeTableRow(props) {\r\n  const { onRowClick, isRowSelected, index, row } = props;\r\n\r\n  const labelId = `intake-table-checkbox-${index}`;\r\n  const makeCellKey = property => `intake-table-cell-${index}-${property}`;\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      onClick={onRowClick}\r\n      role=\"checkbox\"\r\n      aria-checked={isRowSelected}\r\n      tabIndex={-1}\r\n      key={row[\"row\"]}\r\n      selected={isRowSelected}\r\n    >\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox\r\n          checked={isRowSelected}\r\n          inputProps={{ 'aria-labelledby': labelId }}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={makeCellKey('row')} align=\"right\">{row['row']}</TableCell>\r\n      <TableCell key={makeCellKey('Submission date')} align=\"left\">{row['Submission date']}</TableCell>\r\n      <TableCell key={makeCellKey('Entity')} align=\"left\">{row['Entity']}</TableCell>\r\n      <TableCell key={makeCellKey('DBA')} align=\"left\">{row['DBA']}</TableCell>\r\n      <TableCell key={makeCellKey('Facility Address')} align=\"left\">{row['Facility Address']}</TableCell>\r\n      <TableCell key={makeCellKey('Facility Suite #')} align=\"right\">{row['Facility Suite #']}</TableCell>\r\n      <TableCell key={makeCellKey('Facility Zip')} align=\"right\">{row['Facility Zip']}</TableCell>\r\n      <TableCell key={makeCellKey('Mailing Address')} align=\"left\">{row['Mailing Address']}</TableCell>\r\n      <TableCell key={makeCellKey('MRL')} align=\"left\">{row['MRL']}</TableCell>\r\n      <TableCell key={makeCellKey('Neighborhood Association')} align=\"left\">{row['Neighborhood Association']}</TableCell>\r\n      <TableCell key={makeCellKey('Compliance Region')} align=\"left\">{row['Compliance Region']}</TableCell>\r\n      <TableCell key={makeCellKey('Primary Contact First Name')} align=\"left\">{row['Primary Contact First Name']}</TableCell>\r\n      <TableCell key={makeCellKey('Primary Contact Last Name')} align=\"left\">{row['Primary Contact Last Name']}</TableCell>\r\n      <TableCell key={makeCellKey('Email')} align=\"left\">{row['Email']}</TableCell>\r\n      <TableCell key={makeCellKey('Phone')} align=\"left\">{row['Phone']}</TableCell>\r\n      <TableCell key={makeCellKey('Endorse Type')} align=\"left\">{row['Endorse Type']}</TableCell>\r\n      <TableCell key={makeCellKey('License Type')} align=\"left\">{row['License Type']}</TableCell>\r\n      <TableCell key={makeCellKey('Repeat location?')} align=\"left\">{row['Repeat location?']}</TableCell>\r\n      <TableCell key={makeCellKey('App complete?')} align=\"left\">{row['App complete?']}</TableCell>\r\n      <TableCell key={makeCellKey('Fee Schedule')} align=\"left\">{row['Fee Schedule']}</TableCell>\r\n      <TableCell key={makeCellKey('Receipt No.')} align=\"left\">{row['Receipt No.']}</TableCell>\r\n      <TableCell key={makeCellKey('Cash Amount')} align=\"left\">{row['Cash Amount']}</TableCell>\r\n      <TableCell key={makeCellKey('Check Amount')} align=\"left\">{row['Check Amount']}</TableCell>\r\n      <TableCell key={makeCellKey('Card Amount')} align=\"left\">{row['Card Amount']}</TableCell>\r\n      <TableCell key={makeCellKey('Check No. / Approval Code')} align=\"right\">{row['Check No. / Approval Code']}</TableCell>\r\n      <TableCell key={makeCellKey('MRL#')} align=\"left\">{row['MRL#']}</TableCell>\r\n      <TableCell key={makeCellKey('Notes')} align=\"left\">{row['Notes']}</TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Toolbar, Typography, Tooltip, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nexport default function IntakeTableToolbar(props) {\r\n  const { numSelected, onDeleteRows, onRefreshTable, onEditRow } = props;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography variant=\"h6\">Intake</Typography>\r\n      <Tooltip title=\"Refresh\">\r\n        <IconButton aria-label=\"refresh-table\" onClick={onRefreshTable}><RefreshIcon /></IconButton>\r\n      </Tooltip>\r\n      {numSelected === 1 ?\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit-row\" onClick={onEditRow}><EditIcon /></IconButton>\r\n        </Tooltip> : null}\r\n      {numSelected > 0 ?\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete-rows\" onClick={onDeleteRows}><DeleteIcon /></IconButton>\r\n        </Tooltip> : null}\r\n      <Typography variant=\"subtitle1\">{numSelected} selected</Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, FormControlLabel, Switch, Typography } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport './style.css';\r\nimport { getIntakeTable, deleteRow, filterIntakeTable, editRow } from './MockApi';\r\nimport IntakeTableFilters from './IntakeTableFilters';\r\nimport IntakeRowForm from './IntakeRowForm';\r\nimport IntakeTableHead from './IntakeTableHead';\r\nimport IntakeTableRow from './IntakeTableRow';\r\nimport IntakeTableToolbar from './IntakeTableToolbar';\r\n\r\nconst headers = [\r\n  { id: 'row', numeric: true, label: 'row' },\r\n  { id: 'Submission date', numeric: false, label: 'Submission date' },\r\n  { id: 'Entity', numeric: false, label: 'Entity' },\r\n  { id: 'DBA', numeric: false, label: 'DBA' },\r\n  { id: 'Facility Address', numeric: false, label: 'Facility Address' },\r\n  { id: 'Facility Suite #', numeric: true, label: 'Facility Suite #' },\r\n  { id: 'Facility Zip', numeric: true, label: 'Facility Zip' },\r\n  { id: 'Mailing Address', numeric: false, label: 'Mailing Address' },\r\n  { id: 'MRL', numeric: false, label: 'MRL' },\r\n  { id: 'Neighborhood Association', numeric: false, label: 'Neighborhood Association' },\r\n  { id: 'Compliance Region', numeric: false, label: 'Compliance Region' },\r\n  { id: 'Primary Contact First Name', numeric: false, label: 'Primary Contact First Name' },\r\n  { id: 'Primary Contact Last Name', numeric: false, label: 'Primary Contact Last Name' },\r\n  { id: 'Email', numeric: false, label: 'Email' },\r\n  { id: 'Phone', numeric: false, label: 'Phone' },\r\n  { id: 'Endorse Type', numeric: false, label: 'Endorse Type' },\r\n  { id: 'License Type', numeric: false, label: 'License Type' },\r\n  { id: 'Repeat location?', numeric: false, label: 'Repeat location?' },\r\n  { id: 'App complete?', numeric: false, label: 'App complete?' },\r\n  { id: 'Fee Schedule', numeric: false, label: 'Fee Schedule' },\r\n  { id: 'Receipt No.', numeric: false, label: 'Receipt No.' },\r\n  { id: 'Cash Amount', numeric: false, label: 'Cash Amount' },\r\n  { id: 'Check Amount', numeric: false, label: 'Check Amount' },\r\n  { id: 'Card Amount', numeric: false, label: 'Card Amount' },\r\n  { id: 'Check No. / Approval Code', numeric: true, label: 'Check No. / Approval Code' },\r\n  { id: 'MRL#', numeric: false, label: 'MRL#' },\r\n  { id: 'Notes', numeric: false, label: 'Notes' },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  } else if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nexport default function IntakeTable() {\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('row');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const getRow = rowNumber => rows.find(row => row['row'] === rowNumber);\r\n\r\n  const refreshTable = () => {\r\n    getIntakeTable().then(res => {\r\n      let rows = res.data;\r\n      setRows(rows);\r\n      setSelected([]);\r\n    });\r\n    console.log('table refreshed');\r\n  }\r\n\r\n  useEffect(refreshTable, []);\r\n\r\n  const handleRequestSort = (_, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(row => row[\"row\"]);\r\n      setSelected(newSelecteds);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (_, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const onDeleteRows = () => {\r\n    if (selected.length > 0) {\r\n      let deletePromises = [];\r\n\r\n      selected.forEach(rowNumber => {\r\n        deletePromises.push(deleteRow(rowNumber).then(res => console.log(res, rowNumber)));\r\n      });\r\n\r\n      Promise.all(deletePromises).then(() => {\r\n        console.log(`yeeted rows: ${selected}`);\r\n        setSelected([]);\r\n        refreshTable();\r\n      });\r\n    } else {\r\n      console.log('no rows to yeet');\r\n    }\r\n  };\r\n\r\n  const onEditRow = newRow => {\r\n    if (selected.length === 1) {\r\n      editRow(newRow).then(res => console.log(res));\r\n    } else {\r\n      console.log('somehow you selected 0 or more than 1 row to edit');\r\n    }\r\n  }\r\n\r\n  const onFilterSubmit = query => {\r\n    filterIntakeTable(query).then(res => {\r\n      console.log('filtered', res);\r\n      setRows(res.data);\r\n    });\r\n  }\r\n\r\n  if (rows.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <IntakeTableToolbar numSelected={selected.length} />\r\n        <Typography variant=\"body1\" align=\"center\">No data found</Typography>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <IntakeTableToolbar\r\n          numSelected={selected.length}\r\n          onDeleteRows={onDeleteRows}\r\n          onEditRow={() => setEditDialogOpen(true)}\r\n          onRefreshTable={refreshTable} />\r\n        <IntakeTableFilters onSubmit={onFilterSubmit} />\r\n        <TableContainer>\r\n          <Table\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"Data table\"\r\n          >\r\n            <IntakeTableHead\r\n              headers={headers}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) =>\r\n                  <IntakeTableRow\r\n                    key={index}\r\n                    onRowClick={event => handleRowClick(event, row[\"row\"])}\r\n                    isRowSelected={isSelected(row[\"row\"])}\r\n                    index={index}\r\n                    row={row}\r\n                  />\r\n                )}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n        <IntakeRowForm\r\n          isDialog={true}\r\n          row={getRow(selected[0])}\r\n          dialogOpen={editDialogOpen}\r\n          onDialogClose={() => setEditDialogOpen(false)}\r\n          onSubmit={onEditRow}\r\n        ></IntakeRowForm>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport IntakeTable from './IntakeTable';\r\n\r\nexport default function SeeTheData() {\r\n  return (\r\n    <IntakeTable />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function VisualizeWithTableau() {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <iframe title=\"youtube\" width=\"100%\" height=\"500\" src=\"https://www.youtube-nocookie.com/embed/dQw4w9WgXcQ\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n      <Button style={{ marginRight: '1rem' }} variant=\"outlined\" color=\"primary\">\r\n        Download this workbook\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Open in Tableau Desktop\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { makeField } from './IntakeRowForm';\r\n\r\nexport default function LoginDialog(props) {\r\n  const { open, onClose, onSubmit } = props;\r\n\r\n  const [user, setUser] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onSubmitClick = () => {\r\n\r\n    if (user.length > 0 && password.length > 0) {\r\n      const userCredentials = {\r\n        user: user,\r\n        password: password,\r\n      };\r\n\r\n      onSubmit(userCredentials)\r\n    } else {\r\n      console.log('must enter both user and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"login-dialog\">\r\n      <DialogTitle>Login</DialogTitle>\r\n      <DialogContent>\r\n        {makeField('User', '', e => setUser(e.target.value))}\r\n        {makeField('Password', '', e => setPassword(e.target.value))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">Cancel</Button>\r\n        <Button onClick={onSubmitClick} color=\"primary\">Submit</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n    secondary: {\r\n      main: grey[600],\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from 'react';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport Nav from './Nav';\r\nimport Title from './Title';\r\nimport WhatsNew from './WhatsNew';\r\nimport AddNewEntries from './AddNewEntries';\r\nimport SeeTheData from './SeeTheData';\r\nimport VisualizeWithTableau from './VisualizeWithTableau';\r\nimport LoginDialog from './LoginDialog';\r\nimport { login } from './MockApi';\r\n\r\nexport default function App() {\r\n  const [navValue, setNavValue] = useState(2);\r\n  const [loginDialogOpen, setLoginDialogOpen] = useState(false);\r\n\r\n  const onLogin = credentials => {\r\n    setLoginDialogOpen(false);\r\n    login(credentials).then(res => console.log(res, credentials));\r\n  };\r\n\r\n  const onNavChange = (_, newValue) => {\r\n    setNavValue(newValue);\r\n  }\r\n\r\n  const getComponentMatchingNavValue = () => {\r\n    switch (navValue) {\r\n      case 0:\r\n        return <WhatsNew />;\r\n      case 1:\r\n        return <AddNewEntries />;\r\n      case 2:\r\n        return <SeeTheData />;\r\n      case 3:\r\n        return <VisualizeWithTableau />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6}>\r\n        <Title />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Button style={{ margin: '1rem 1rem', float: 'right' }} onClick={() => setLoginDialogOpen(true)}>Login</Button>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Nav navValue={navValue} onNavChange={onNavChange} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {getComponentMatchingNavValue()}\r\n      </Grid>\r\n      <LoginDialog\r\n        open={loginDialogOpen}\r\n        onClose={() => setLoginDialogOpen(false)}\r\n        onSubmit={onLogin}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n"],"sourceRoot":""}