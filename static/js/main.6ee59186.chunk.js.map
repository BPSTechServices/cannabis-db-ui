{"version":3,"sources":["Nav.jsx","Title.jsx","WhatsNew.jsx","IntakeRowForm.jsx","ApiCaller.js","AlertBarContext.jsx","AddViaSpreadSheetForm.jsx","UserContext.jsx","AddNewEntries.jsx","IntakeTableFilters.jsx","IntakeTableHead.jsx","IntakeTableRow.jsx","IntakeTableToolbar.jsx","IntakeTableColumns.js","IntakeTable.jsx","SeeTheData.jsx","VisualizeWithTableau.jsx","LoginForm.jsx","serviceWorker.js","index.js","App.jsx"],"names":["Nav","props","Tabs","value","navValue","onChange","onNavChange","indicatorColor","textColor","centered","Tab","label","Title","Grid","container","direction","alignItems","item","className","SeeTheData","makeField","field","handleChange","TextField","style","marginBottom","fullWidth","variant","defaultValue","IntakeRowForm","isDialog","dialogOpen","onDialogClose","row","onSubmit","theRow","useState","rowValue","setRowValue","submission_date","submissionDateValue","setSubmissionDateValue","entity","entityValue","setEntityValue","dba","dbaValue","setDbaValue","facility_address","facilityAddressValue","setFacilityAddressValue","facility_suite","facilitySuiteNoValue","setFacilitySuiteNoValue","facility_zip","facilityZipValue","setFacilityZipValue","mailing_address","mailingAddressValue","setMailingAddressValue","mrl","mrlValue","setMrlValue","neighborhood_association","neighborhoodAssocValue","setneighborhoodAssocValue","compliance_region","complianceRegionValue","setComplianceRegionValue","primary_contact_first_name","firstNameValue","setFirstNameValue","primary_contact_last_name","lastNameValue","setLastNameValue","email","emailValue","setEmailValue","phone","phoneValue","setPhoneValue","endorse_type","endorseTypeValue","setEndorseTypeValue","license_type","licenseTypeValue","setLicenseTypeValue","repeat_location","repeatLocationValue","setRepeatLocationValue","app_complete","appCompleteValue","setAppCompleteValue","fee_schedule","feeScheduleValue","setFeeScheduleValue","receipt_num","receiptNoValue","setReceiptNoValue","cash_amount","cashAmountValue","setCashAmountValue","check_amount","checkAmountValue","setCheckAmountValue","card_amount","cardAmountValue","setCardAmountValue","check_num_approval_code","checkNoValue","setCheckNoValue","mrl_num","mrlNoValue","setMrlNoValue","notes","notesValue","setNotesValue","onSubmitClick","_","formFields","e","target","Dialog","open","onClose","onEnter","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","onClick","color","endpoints","getErrorMessage","err","a","text","Promise","resolve","fetch","then","response","ok","json","queryWhere","query","table","where","method","headers","body","JSON","stringify","file","data","FormData","append","name","rowNumber","isNaN","reject","url","credentials","is_admin","read_only","returnCode","enableReadOnly","AlertBarContext","createContext","AlertBar","severity","message","Snackbar","anchorOrigin","vertical","horizontal","Alert","AddViaSpreadSheetForm","files","setFiles","openAlertBar","useContext","onDrop","acceptedFiles","concat","getRootProps","getInputProps","fontSize","length","List","dense","map","index","ListItem","key","ListItemText","addPromises","forEach","push","addFile","all","console","log","catch","errorMessage","finally","UserContext","AddNewEntries","user","isLoggedIn","isReadOnly","Container","spacing","xs","sm","md","maxWidth","rowToAdd","addRow","res","Typography","align","IntakeTableFilters","allColumns","whereValue","setWhereValue","columns","setColumns","onFilterClick","event","preventDefault","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","width","InputLabel","id","Select","labelId","multiple","input","Input","renderValue","selected","elem","Chip","column","MenuItem","marginTop","ExpansionPanelActions","IntakeTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","IntakeTableRow","onRowClick","isRowSelected","shownColumns","makeCellKey","isColumnShown","includes","hover","role","aria-checked","tabIndex","IntakeTableToolbar","onDeleteRows","onRefreshTable","onEditRow","canUserEdit","canUserDelete","isAdmin","Toolbar","Tooltip","title","IconButton","aria-label","header","descendingComparator","b","IntakeTable","setOrder","setOrderBy","setSelected","page","setPage","setDense","rowsPerPage","setRowsPerPage","editDialogOpen","setEditDialogOpen","setShownColumns","rows","setRows","shownHeaders","filter","refreshTable","getIntakeTable","useEffect","emptyRows","Math","min","onFilterSubmit","filterIntakeTable","deletePromises","deleteRow","TableContainer","Table","size","newSelecteds","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","selectedIndex","indexOf","newSelected","handleRowClick","height","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","find","newRow","editRow","VisualizeWithTableau","src","frameBorder","allow","allowFullScreen","marginRight","LoginForm","setEmail","password","setPassword","onFormSubmit","display","margin","type","float","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","grey","secondary","ReactDOM","render","ThemeProvider","CssBaseline","setSeverity","setMessage","setOpen","Provider","children","useReducer","state","action","dispatch","setNavValue","userDispatch","justify","logout","newValue","getComponentMatchingNavValue","login","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6ee59186.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\n\r\nexport default function Nav(props) {\r\n  return (\r\n    <Tabs\r\n      value={props.navValue}\r\n      onChange={props.onNavChange}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      centered\r\n    >\r\n      <Tab label=\"What's New?\" />\r\n      <Tab label=\"Add new entries\" />\r\n      <Tab label=\"See the data\" />\r\n      <Tab label=\"Visualize with Tableau\" />\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './style.css';\r\n\r\nexport default function Title() {\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\">\r\n      <Grid item className=\"title\">\r\n        Kanabi\r\n      </Grid>\r\n      <Grid item className=\"subtitle\">\r\n        by PSU FireAnts capstone team\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SeeTheData() {\r\n  return (\r\n    <div>\r\n      <h1>What's new?</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextField, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport './style.css';\r\n\r\nexport const makeField = (field, value = '', handleChange) =>\r\n  <TextField\r\n    style={{ marginBottom: '1rem' }}\r\n    fullWidth\r\n    label={field}\r\n    variant=\"outlined\"\r\n    onChange={handleChange}\r\n    defaultValue={value}\r\n  />;\r\n\r\nexport default function IntakeRowForm(props) {\r\n  const { isDialog, dialogOpen, onDialogClose, row, onSubmit } = props;\r\n\r\n  // row could be undefined, in this case we let row be empty strings\r\n  const theRow = row || {\r\n    \"row\": \"\",\r\n    \"Submission date\": \"\",\r\n    \"Entity\": \"\",\r\n    \"DBA\": \"\",\r\n    \"Facility Address\": \"\",\r\n    \"Facility Suite #\": \"\",\r\n    \"Facility Zip\": \"\",\r\n    \"Mailing Address\": \"\",\r\n    \"MRL\": \"\",\r\n    \"Neighborhood Association\": \"\",\r\n    \"Compliance Region\": \"\",\r\n    \"Primary Contact First Name\": \"\",\r\n    \"Primary Contact Last Name\": \"\",\r\n    \"Email\": \"\",\r\n    \"Phone\": \"\",\r\n    \"Endorse Type\": \"\",\r\n    \"License Type\": \"\",\r\n    \"Repeat location?\": \"\",\r\n    \"App complete?\": \"\",\r\n    \"Fee Schedule\": \"\",\r\n    \"Receipt No.\": \"\",\r\n    \"Cash Amount\": \"\",\r\n    \"Check Amount\": \"\",\r\n    \"Card Amount\": \"\",\r\n    \"Check No. / Approval Code\": \"\",\r\n    \"MRL#\": \"\",\r\n    \"Notes\": \"\"\r\n  };\r\n\r\n  const [rowValue, setRowValue] = useState(theRow.row);\r\n  const [submissionDateValue, setSubmissionDateValue] = useState(theRow.submission_date);\r\n  const [entityValue, setEntityValue] = useState(theRow.entity);\r\n  const [dbaValue, setDbaValue] = useState(theRow.dba);\r\n  const [facilityAddressValue, setFacilityAddressValue] = useState(theRow.facility_address);\r\n  const [facilitySuiteNoValue, setFacilitySuiteNoValue] = useState(theRow.facility_suite);\r\n  const [facilityZipValue, setFacilityZipValue] = useState(theRow.facility_zip);\r\n  const [mailingAddressValue, setMailingAddressValue] = useState(theRow.mailing_address);\r\n  const [mrlValue, setMrlValue] = useState(theRow.mrl);\r\n  const [neighborhoodAssocValue, setneighborhoodAssocValue] = useState(theRow.neighborhood_association);\r\n  const [complianceRegionValue, setComplianceRegionValue] = useState(theRow.compliance_region);\r\n  const [firstNameValue, setFirstNameValue] = useState(theRow.primary_contact_first_name);\r\n  const [lastNameValue, setLastNameValue] = useState(theRow.primary_contact_last_name);\r\n  const [emailValue, setEmailValue] = useState(theRow.email);\r\n  const [phoneValue, setPhoneValue] = useState(theRow.phone);\r\n  const [endorseTypeValue, setEndorseTypeValue] = useState(theRow.endorse_type);\r\n  const [licenseTypeValue, setLicenseTypeValue] = useState(theRow.license_type);\r\n  const [repeatLocationValue, setRepeatLocationValue] = useState(theRow.repeat_location);\r\n  const [appCompleteValue, setAppCompleteValue] = useState(theRow.app_complete);\r\n  const [feeScheduleValue, setFeeScheduleValue] = useState(theRow.fee_schedule);\r\n  const [receiptNoValue, setReceiptNoValue] = useState(theRow.receipt_num);\r\n  const [cashAmountValue, setCashAmountValue] = useState(theRow.cash_amount);\r\n  const [checkAmountValue, setCheckAmountValue] = useState(theRow.check_amount);\r\n  const [cardAmountValue, setCardAmountValue] = useState(theRow.card_amount);\r\n  const [checkNoValue, setCheckNoValue] = useState(theRow.check_num_approval_code);\r\n  const [mrlNoValue, setMrlNoValue] = useState(theRow.mrl_num);\r\n  const [notesValue, setNotesValue] = useState(theRow.notes);\r\n\r\n  // Update states every time the dialog opens\r\n  const onDialogEnter = () => {\r\n    setRowValue(theRow.row);\r\n    setSubmissionDateValue(theRow.submission_date);\r\n    setEntityValue(theRow.entity);\r\n    setDbaValue(theRow.dba);\r\n    setFacilityAddressValue(theRow.facility_address);\r\n    setFacilitySuiteNoValue(theRow.facility_suite);\r\n    setFacilityZipValue(theRow.facility_zip);\r\n    setMailingAddressValue(theRow.mailing_address);\r\n    setMrlValue(theRow.mrl);\r\n    setneighborhoodAssocValue(theRow.neighborhood_association);\r\n    setComplianceRegionValue(theRow.compliance_region);\r\n    setFirstNameValue(theRow.primary_contact_first_name);\r\n    setLastNameValue(theRow.primary_contact_last_name);\r\n    setEmailValue(theRow.email);\r\n    setPhoneValue(theRow.phone);\r\n    setEndorseTypeValue(theRow.endorse_type);\r\n    setLicenseTypeValue(theRow.license_type);\r\n    setRepeatLocationValue(theRow.repeat_location);\r\n    setAppCompleteValue(theRow.app_complete);\r\n    setFeeScheduleValue(theRow.fee_schedule);\r\n    setReceiptNoValue(theRow.receipt_num);\r\n    setCashAmountValue(theRow.cash_amount);\r\n    setCheckAmountValue(theRow.check_amount);\r\n    setCardAmountValue(theRow.card_amount);\r\n    setCheckNoValue(theRow.check_num_approval_code);\r\n    setMrlNoValue(theRow.mrl_num);\r\n    setNotesValue(theRow.notes);\r\n  };\r\n\r\n  const makeRowToSubmit = () => {\r\n    return {\r\n      \"row\": rowValue,\r\n      \"Submission date\": submissionDateValue,\r\n      \"Entity\": entityValue,\r\n      \"DBA\": dbaValue,\r\n      \"Facility Address\": facilityAddressValue,\r\n      \"Facility Suite #\": facilitySuiteNoValue,\r\n      \"Facility Zip\": facilityZipValue,\r\n      \"Mailing Address\": mailingAddressValue,\r\n      \"MRL\": mrlValue,\r\n      \"Neighborhood Association\": neighborhoodAssocValue,\r\n      \"Compliance Region\": complianceRegionValue,\r\n      \"Primary Contact First Name\": firstNameValue,\r\n      \"Primary Contact Last Name\": lastNameValue,\r\n      \"Email\": emailValue,\r\n      \"Phone\": phoneValue,\r\n      \"Endorse Type\": endorseTypeValue,\r\n      \"License Type\": licenseTypeValue,\r\n      \"Repeat location?\": repeatLocationValue,\r\n      \"App complete?\": appCompleteValue,\r\n      \"Fee Schedule\": feeScheduleValue,\r\n      \"Receipt No.\": receiptNoValue,\r\n      \"Cash Amount\": cashAmountValue,\r\n      \"Check Amount\": checkAmountValue,\r\n      \"Card Amount\": cardAmountValue,\r\n      \"Check No. / Approval Code\": checkNoValue,\r\n      \"MRL#\": mrlNoValue,\r\n      \"Notes\": notesValue\r\n    };\r\n  };\r\n\r\n  const onSubmitClick = _ => {\r\n    onSubmit(makeRowToSubmit());\r\n\r\n    if (isDialog) {\r\n      onDialogClose();\r\n    }\r\n  };\r\n\r\n  const formFields = () =>\r\n    <>\r\n      {makeField('row', theRow.row, e => setRowValue(e.target.value))}\r\n      {makeField('Submission date', theRow.submission_date, e => setSubmissionDateValue(e.target.value))}\r\n      {makeField('Entity', theRow.entity, e => setEntityValue(e.target.value))}\r\n      {makeField('DBA', theRow.dba, e => setDbaValue(e.target.value))}\r\n      {makeField('Facility Address', theRow.facility_address, e => setFacilityAddressValue(e.target.value))}\r\n      {makeField('Facility Suite #', theRow.facility_suite, e => setFacilitySuiteNoValue(e.target.value))}\r\n      {makeField('Facility Zip', theRow.facility_zip, e => setFacilityZipValue(e.target.value))}\r\n      {makeField('Mailing Address', theRow.mailing_address, e => setMailingAddressValue(e.target.value))}\r\n      {makeField('MRL', theRow.mrl, e => setMrlValue(e.target.value))}\r\n      {makeField('Neighborhood Association', theRow.neighborhood_association, e => setneighborhoodAssocValue(e.target.value))}\r\n      {makeField('Compliance Region', theRow.compliance_region, e => setComplianceRegionValue(e.target.value))}\r\n      {makeField('Primary Contact First Name', theRow.primary_contact_first_name, e => setFirstNameValue(e.target.value))}\r\n      {makeField('Primary Contact Last Name', theRow.primary_contact_last_name, e => setLastNameValue(e.target.value))}\r\n      {makeField('Email', theRow.email, e => setEmailValue(e.target.value))}\r\n      {makeField('Phone', theRow.phone, e => setPhoneValue(e.target.value))}\r\n      {makeField('Endorse Type', theRow.endorse_type, e => setEndorseTypeValue(e.target.value))}\r\n      {makeField('License Type', theRow.license_type, e => setLicenseTypeValue(e.target.value))}\r\n      {makeField('Repeat location?', theRow.repeat_location, e => setRepeatLocationValue(e.target.value))}\r\n      {makeField('App complete?', theRow.app_complete, e => setAppCompleteValue(e.target.value))}\r\n      {makeField('Fee Schedule', theRow.fee_schedule, e => setFeeScheduleValue(e.target.value))}\r\n      {makeField('Receipt No.', theRow.receipt_num, e => setReceiptNoValue(e.target.value))}\r\n      {makeField('Cash Amount', theRow.cash_amount, e => setCashAmountValue(e.target.value))}\r\n      {makeField('Check Amount', theRow.check_amount, e => setCheckAmountValue(e.target.value))}\r\n      {makeField('Card Amount', theRow.card_amount, e => setCardAmountValue(e.target.value))}\r\n      {makeField('Check No. / Approval Code', theRow.check_num_approval_code, e => setCheckNoValue(e.target.value))}\r\n      {makeField('MRL#', theRow.mrl_num, e => setMrlNoValue(e.target.value))}\r\n      {makeField('Notes', theRow.notes, e => setNotesValue(e.target.value))}\r\n    </>;\r\n\r\n  if (isDialog === true) {\r\n    return (\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={onDialogClose}\r\n        onEnter={onDialogEnter}\r\n        aria-labelledby=\"intake-row-form-dialog\"\r\n      >\r\n        <DialogTitle>Edit row {theRow.row}</DialogTitle>\r\n        <DialogContent>\r\n          {formFields()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onDialogClose} color=\"secondary\">Cancel</Button>\r\n          <Button onClick={onSubmitClick} color=\"primary\">Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  } else {\r\n    return (\r\n      <form>\r\n        {formFields()}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitClick}>Submit</Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","const endpoints = {\r\n  getIntakeTable: 'https://capstone.sugar.coffee/list?table=intake',\r\n  filterIntakeTable: 'https://capstone.sugar.coffee/query',\r\n  addRow: 'https://capstone.sugar.coffee/load?table=intake',\r\n  addFile: 'https://capstone.sugar.coffee/load',\r\n  deleteRow: 'https://capstone.sugar.coffee/delete?table=intake',\r\n  editRow: 'https://capstone.sugar.coffee/update',\r\n  login: 'https://capstone.sugar.coffee/login',\r\n  logout: 'https://capstone.sugar.coffee/logout',\r\n  enableReadOnly: '',\r\n  disableReadOnly: '',\r\n};\r\n\r\nexport async function getErrorMessage(err) {\r\n  if (err.text) return err.text()\r\n  else return Promise.resolve(err)\r\n}\r\n\r\nexport async function getIntakeTable() {\r\n  return fetch(endpoints.getIntakeTable).then(response => {\r\n    if (!response.ok) throw response;\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport async function filterIntakeTable(queryWhere) {\r\n  const query = {\r\n    table: 'intake',\r\n    where: queryWhere,\r\n  }\r\n\r\n  return fetch(endpoints.filterIntakeTable, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(query),\r\n  }).then(response => {\r\n    if (!response.ok) throw response;\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport async function addRow(row) {\r\n  return fetch(endpoints.addRow, {\r\n    method: 'put',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(row),\r\n  }).then(response => {\r\n    if (!response.ok) throw response;\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport async function addFile(file) {\r\n  const data = new FormData();\r\n  data.append('file', file, file.name);\r\n\r\n  return fetch(endpoints.addFile, {\r\n    method: 'post',\r\n    body: data,\r\n  }).then(response => {\r\n    if (!response.ok) throw response;\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport async function deleteRow(rowNumber) {\r\n  if (isNaN(rowNumber)) return Promise.reject(`${rowNumber} is not a number`);\r\n\r\n  const url = `${endpoints.deleteRow}&row=${rowNumber}`;\r\n\r\n  return fetch(url).then(response => {\r\n    if (!response.ok) throw response;\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport async function editRow(row) {\r\n  return fetch(endpoints.editRow, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(row),\r\n  }).then(response => {\r\n    if (!response.ok) throw response;\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport async function login(credentials) {\r\n  return {\r\n    email: 'admin@gmail.com',\r\n    name: 'admin',\r\n    is_admin: true,\r\n    read_only: false,\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n\r\nexport async function enableReadOnly() {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n\r\nexport async function disableReadOnly() {\r\n  return {\r\n    returnCode: 200,\r\n  }\r\n}\r\n","import React, { createContext, useState } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport const AlertBarContext = createContext();\r\n\r\nexport function AlertBarProvider(props) {\r\n  const [severity, setSeverity] = useState('success');\r\n  const [message, setMessage] = useState('Alert loaded');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const openAlertBar = (severity, message) => {\r\n    setSeverity(severity);\r\n    setMessage(message);\r\n    if (open) {\r\n      setOpen(false);\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <AlertBarContext.Provider value={openAlertBar}>\r\n      {props.children}\r\n      <AlertBar severity={severity} message={message} open={open} onClose={() => setOpen(false)} />\r\n    </AlertBarContext.Provider>\r\n  );\r\n}\r\n\r\nexport function AlertBar(props) {\r\n  const { severity, message, open, onClose } = props;\r\n\r\n  const anchorOrigin = {\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} onClose={onClose} anchorOrigin={anchorOrigin}>\r\n      <Alert variant=\"filled\" onClose={onClose} severity={severity}>{message}</Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Button, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport './style.css';\r\nimport { addFile, getErrorMessage } from './ApiCaller';\r\nimport { AlertBarContext } from './AlertBarContext';\r\n\r\nexport default function AddViaSpreadSheetForm() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const openAlertBar = useContext(AlertBarContext);\r\n\r\n  const onSubmit = _ => {\r\n    if (files.length > 0) {\r\n      let addPromises = [];\r\n\r\n      files.forEach(file => addPromises.push(addFile(file)));\r\n\r\n      Promise.all(addPromises)\r\n        .then(() => {\r\n          console.log('added all file(s)');\r\n          openAlertBar('success', 'Added all files');\r\n        })\r\n        .catch(err => {\r\n          getErrorMessage(err).then(errorMessage => {\r\n            console.log('add files fail', errorMessage);\r\n            openAlertBar('error', `Fail to add file(s). Error message: ${errorMessage}`);\r\n          });\r\n        })\r\n        .finally(() => setFiles([]));\r\n    } else {\r\n      console.log('no files to submit');\r\n      openAlertBar('error', 'No files to add');\r\n    }\r\n  }\r\n\r\n  const onFilesDrop = acceptedFiles => {\r\n    setFiles(files.concat(acceptedFiles))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dropzone onDrop={onFilesDrop}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <CloudUploadIcon style={{ fontSize: \"4rem\" }} />\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Click to upload spreadsheets\r\n            </Button>\r\n            <p>or drag and drop them here</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      {(files.length > 0) ?\r\n        <List dense>\r\n          {files.map((file, index) =>\r\n            <ListItem key={`file-${index}`}>\r\n              <ListItemText>{file.name}</ListItemText>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        : null}\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>Submit</Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider(props) {\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'login':\r\n        return {\r\n          name: action.name,\r\n          isLoggedIn: true,\r\n          isAdmin: action.isAdmin,\r\n          isReadOnly: action.isReadOnly,\r\n        };\r\n      case 'logout':\r\n        return {\r\n          name: '',\r\n          isLoggedIn: false,\r\n          isAdmin: false,\r\n          isReadOnly: false,\r\n        };\r\n      case 'enable-readonly':\r\n        return {\r\n          ...state,\r\n          isReadOnly: true,\r\n        };\r\n      case 'disable-readonly':\r\n        return {\r\n          ...state,\r\n          isReadOnly: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [user, dispatch] = useReducer(reducer, {\r\n    name: '',\r\n    isLoggedIn: false,\r\n    isAdmin: false,\r\n    isReadOnly: false,\r\n  })\r\n\r\n  return (\r\n    <UserContext.Provider value={[user, dispatch]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './style.css';\r\nimport IntakeRowForm from './IntakeRowForm';\r\nimport AddViaSpreadSheetForm from './AddViaSpreadSheetForm';\r\nimport { addRow, getErrorMessage } from './ApiCaller';\r\nimport { AlertBarContext } from './AlertBarContext';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport default function AddNewEntries() {\r\n  const [user] = useContext(UserContext);\r\n  const openAlertBar = useContext(AlertBarContext);\r\n\r\n  const onAddAnEntry = rowToAdd => {\r\n    addRow(rowToAdd)\r\n      .then(res => {\r\n        console.log('added row', res);\r\n        openAlertBar('success', `Added row ${res.row}`);\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('add row fail', errorMessage);\r\n          openAlertBar('error', `Failed to add row. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  }\r\n\r\n  if (user.isLoggedIn && !user.isReadOnly) {\r\n    return (\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <Container maxWidth=\"md\">\r\n              <h1>Add entries via spreadsheets</h1>\r\n              <AddViaSpreadSheetForm />\r\n            </Container>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={8}>\r\n            <Container maxWidth=\"md\">\r\n              <h1>Add an entry</h1>\r\n              <IntakeRowForm onSubmit={onAddAnEntry} />\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  } else if (user.isLoggedIn) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"body1\" align=\"center\">\r\n          You don't have permission to add entries. Did you forget to turn off read-only mode?\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"body1\" align=\"center\">\r\n          You are not logged in.\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Typography, Button, Select, InputLabel, Input, MenuItem, Chip, TextField } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nexport default function IntakeTableFilters(props) {\r\n  const { onSubmit, allColumns } = props;\r\n\r\n  const [whereValue, setWhereValue] = useState('');\r\n  const [columns, setColumns] = useState(allColumns);\r\n\r\n  const onFilterClick = event => {\r\n    event.preventDefault();\r\n    const query = {\r\n      table: 'intake',\r\n      columns: columns,\r\n      where: whereValue,\r\n    }\r\n    onSubmit(query);\r\n  }\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel-content\"\r\n      >\r\n        <FilterListIcon />\r\n        <Typography>Filters</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <form style={{ width: '100%' }} onSubmit={onFilterClick}>\r\n          <InputLabel id=\"columns-label\">Columns</InputLabel>\r\n          <Select\r\n            labelId=\"columns-label\"\r\n            id=\"columns-select\"\r\n            multiple\r\n            value={columns}\r\n            onChange={e => setColumns(e.target.value)}\r\n            input={<Input />}\r\n            renderValue={selected => selected.map(elem => <Chip key={elem} label={elem} />)}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {allColumns.map(column =>\r\n              <MenuItem key={column} value={column}>{column}</MenuItem>\r\n            )}\r\n          </Select>\r\n          <TextField\r\n            style={{ marginTop: '1rem' }}\r\n            fullWidth\r\n            label=\"Where\"\r\n            onChange={e => setWhereValue(e.target.value)}\r\n          />\r\n        </form>\r\n      </ExpansionPanelDetails>\r\n      <ExpansionPanelActions>\r\n        <Button onClick={onFilterClick}>Filter</Button>\r\n      </ExpansionPanelActions>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TableCell, TableHead, TableRow, TableSortLabel, Checkbox } from '@material-ui/core';\r\n\r\nexport default function IntakeTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headers } = props;\r\n\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headers.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TableCell, TableRow, Checkbox } from '@material-ui/core';\r\n\r\nexport default function IntakeTableRow(props) {\r\n  const { onRowClick, isRowSelected, index, row, shownColumns } = props;\r\n\r\n  const labelId = `intake-table-checkbox-${index}`;\r\n  const makeCellKey = property => `intake-table-cell-${index}-${property}`;\r\n\r\n  const isColumnShown = column => shownColumns.includes(column);\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      onClick={onRowClick}\r\n      role=\"checkbox\"\r\n      aria-checked={isRowSelected}\r\n      tabIndex={-1}\r\n      key={row[\"row\"]}\r\n      selected={isRowSelected}\r\n    >\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox\r\n          checked={isRowSelected}\r\n          inputProps={{ 'aria-labelledby': labelId }}\r\n        />\r\n      </TableCell>\r\n      {isColumnShown('row') && <TableCell key={makeCellKey('row')} align=\"right\">{row.row}</TableCell>}\r\n      {isColumnShown('Submission date') && <TableCell key={makeCellKey('Submission date')} align=\"left\">{row.submission_date}</TableCell>}\r\n      {isColumnShown('Entity') && <TableCell key={makeCellKey('Entity')} align=\"left\">{row.entity}</TableCell>}\r\n      {isColumnShown('DBA') && <TableCell key={makeCellKey('DBA')} align=\"left\">{row.dba}</TableCell>}\r\n      {isColumnShown('Facility Address') && <TableCell key={makeCellKey('Facility Address')} align=\"left\">{row.facility_address}</TableCell>}\r\n      {isColumnShown('Facility Suite #') && <TableCell key={makeCellKey('Facility Suite #')} align=\"right\">{row.facility_suite}</TableCell>}\r\n      {isColumnShown('Facility Zip') && <TableCell key={makeCellKey('Facility Zip')} align=\"right\">{row.facility_zip}</TableCell>}\r\n      {isColumnShown('Mailing Address') && <TableCell key={makeCellKey('Mailing Address')} align=\"left\">{row.mailing_address}</TableCell>}\r\n      {isColumnShown('MRL') && <TableCell key={makeCellKey('MRL')} align=\"left\">{row.mrl}</TableCell>}\r\n      {isColumnShown('Neighborhood Association') && <TableCell key={makeCellKey('Neighborhood Association')} align=\"left\">{row.neighborhood_association}</TableCell>}\r\n      {isColumnShown('Compliance Region') && <TableCell key={makeCellKey('Compliance Region')} align=\"left\">{row.compliance_region}</TableCell>}\r\n      {isColumnShown('Primary Contact First Name') && <TableCell key={makeCellKey('Primary Contact First Name')} align=\"left\">{row.primary_contact_first_name}</TableCell>}\r\n      {isColumnShown('Primary Contact Last Name') && <TableCell key={makeCellKey('Primary Contact Last Name')} align=\"left\">{row.primary_contact_last_name}</TableCell>}\r\n      {isColumnShown('Email') && <TableCell key={makeCellKey('Email')} align=\"left\">{row.email}</TableCell>}\r\n      {isColumnShown('Phone') && <TableCell key={makeCellKey('Phone')} align=\"left\">{row.phone}</TableCell>}\r\n      {isColumnShown('Endorse Type') && <TableCell key={makeCellKey('Endorse Type')} align=\"left\">{row.endorse_type}</TableCell>}\r\n      {isColumnShown('License Type') && <TableCell key={makeCellKey('License Type')} align=\"left\">{row.license_type}</TableCell>}\r\n      {isColumnShown('Repeat location?') && <TableCell key={makeCellKey('Repeat location?')} align=\"left\">{row.repeat_location}</TableCell>}\r\n      {isColumnShown('App complete?') && <TableCell key={makeCellKey('App complete?')} align=\"left\">{row.app_complete}</TableCell>}\r\n      {isColumnShown('Fee Schedule') && <TableCell key={makeCellKey('Fee Schedule')} align=\"left\">{row.fee_schedule}</TableCell>}\r\n      {isColumnShown('Receipt No.') && <TableCell key={makeCellKey('Receipt No.')} align=\"left\">{row.receipt_num}</TableCell>}\r\n      {isColumnShown('Cash Amount') && <TableCell key={makeCellKey('Cash Amount')} align=\"left\">{row.cash_amount}</TableCell>}\r\n      {isColumnShown('Check Amount') && <TableCell key={makeCellKey('Check Amount')} align=\"left\">{row.check_amount}</TableCell>}\r\n      {isColumnShown('Card Amount') && <TableCell key={makeCellKey('Card Amount')} align=\"left\">{row.card_amount}</TableCell>}\r\n      {isColumnShown('Check No. / Approval Code') && <TableCell key={makeCellKey('Check No. / Approval Code')} align=\"right\">{row.check_num_approval_code}</TableCell>}\r\n      {isColumnShown('MRL#') && <TableCell key={makeCellKey('MRL#')} align=\"left\">{row.mrl_num}</TableCell>}\r\n      {isColumnShown('Notes') && <TableCell key={makeCellKey('Notes')} align=\"left\">{row.notes}</TableCell>}\r\n    </TableRow>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Toolbar, Typography, Tooltip, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport default function IntakeTableToolbar(props) {\r\n  const { numSelected, onDeleteRows, onRefreshTable, onEditRow } = props;\r\n\r\n  const [user] = useContext(UserContext);\r\n\r\n  const canUserEdit = numSelected === 1 && !user.isReadOnly;\r\n  const canUserDelete = numSelected > 0 && user.isAdmin && !user.isReadOnly;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography variant=\"h6\">Intake</Typography>\r\n      <Tooltip title=\"Refresh\">\r\n        <IconButton aria-label=\"refresh-table\" onClick={onRefreshTable}><RefreshIcon /></IconButton>\r\n      </Tooltip>\r\n      {canUserEdit &&\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton aria-label=\"edit-row\" onClick={onEditRow}><EditIcon /></IconButton>\r\n        </Tooltip>}\r\n      {canUserDelete &&\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete-rows\" onClick={onDeleteRows}><DeleteIcon /></IconButton>\r\n        </Tooltip>}\r\n      <Typography variant=\"subtitle1\">{numSelected} selected</Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n","export const columns = [\r\n  {\r\n    id: 'row',\r\n    numeric: true,\r\n    label: 'row',\r\n  },\r\n  {\r\n    id: 'submission_date',\r\n    numeric: false,\r\n    label: 'Submission date',\r\n  },\r\n  {\r\n    id: 'entity',\r\n    numeric: false,\r\n    label: 'Entity',\r\n  },\r\n  {\r\n    id: 'dba',\r\n    numeric: false,\r\n    label: 'DBA',\r\n  },\r\n  {\r\n    id: 'facility_address',\r\n    numeric: false,\r\n    label: 'Facility Address',\r\n  },\r\n  {\r\n    id: 'facility_suite #',\r\n    numeric: true,\r\n    label: 'Facility Suite #',\r\n  },\r\n  {\r\n    id: 'facility_zip',\r\n    numeric: true,\r\n    label: 'Facility Zip',\r\n  },\r\n  {\r\n    id: 'mailing_address',\r\n    numeric: false,\r\n    label: 'Mailing Address',\r\n  },\r\n  {\r\n    id: 'mrl',\r\n    numeric: false,\r\n    label: 'MRL',\r\n  },\r\n  {\r\n    id: 'neighborhood_association',\r\n    numeric: false,\r\n    label: 'Neighborhood Association',\r\n  },\r\n  {\r\n    id: 'compliance_region',\r\n    numeric: false,\r\n    label: 'Compliance Region',\r\n  },\r\n  {\r\n    id: 'primary_contact_first_name',\r\n    numeric: false,\r\n    label: 'Primary Contact First Name',\r\n  },\r\n  {\r\n    id: 'primary_contact_last_name',\r\n    numeric: false,\r\n    label: 'Primary Contact Last Name',\r\n  },\r\n  {\r\n    id: 'email',\r\n    numeric: false,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    numeric: false,\r\n    label: 'Phone',\r\n  },\r\n  {\r\n    id: 'endorse_type',\r\n    numeric: false,\r\n    label: 'Endorse Type',\r\n  },\r\n  {\r\n    id: 'license_type',\r\n    numeric: false,\r\n    label: 'License Type',\r\n  },\r\n  {\r\n    id: 'repeat_location',\r\n    numeric: false,\r\n    label: 'Repeat location?',\r\n  },\r\n  {\r\n    id: 'app_complete',\r\n    numeric: false,\r\n    label: 'App complete?',\r\n  },\r\n  {\r\n    id: 'fee_schedule',\r\n    numeric: false,\r\n    label: 'Fee Schedule',\r\n  },\r\n  {\r\n    id: 'receipt_num',\r\n    numeric: true,\r\n    label: 'Receipt No.',\r\n  },\r\n  {\r\n    id: 'cash_amount',\r\n    numeric: true,\r\n    label: 'Cash Amount',\r\n  },\r\n  {\r\n    id: 'check_amount',\r\n    numeric: true,\r\n    label: 'Check Amount',\r\n  },\r\n  {\r\n    id: 'card_amount',\r\n    numeric: true,\r\n    label: 'Card Amount',\r\n  },\r\n  {\r\n    id: 'check_num_approval_code',\r\n    numeric: true,\r\n    label: 'Check No. / Approval Code',\r\n  },\r\n  {\r\n    id: 'mrl_num',\r\n    numeric: false,\r\n    label: 'MRL#',\r\n  },\r\n  {\r\n    id: 'notes',\r\n    numeric: false,\r\n    label: 'Notes',\r\n  },\r\n];","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, FormControlLabel, Switch, Typography } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport './style.css';\r\nimport { getIntakeTable, deleteRow, filterIntakeTable, editRow, getErrorMessage } from './ApiCaller';\r\nimport IntakeTableFilters from './IntakeTableFilters';\r\nimport IntakeRowForm from './IntakeRowForm';\r\nimport IntakeTableHead from './IntakeTableHead';\r\nimport IntakeTableRow from './IntakeTableRow';\r\nimport IntakeTableToolbar from './IntakeTableToolbar';\r\nimport { AlertBarContext } from './AlertBarContext';\r\nimport { columns } from './IntakeTableColumns';\r\n\r\nconst headers = columns;\r\nconst allColumns = headers.map(header => header.label);\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  } else if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nexport default function IntakeTable() {\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('row');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [shownColumns, setShownColumns] = useState(allColumns);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const openAlertBar = useContext(AlertBarContext);\r\n\r\n  const shownHeaders = headers.filter(header => shownColumns.includes(header.label));\r\n\r\n  const getRow = rowNumber => rows.find(row => row['row'] === rowNumber);\r\n\r\n  const refreshTable = () => {\r\n    getIntakeTable()\r\n      .then(rows => {\r\n        setRows(rows);\r\n        setSelected([]);\r\n\r\n        console.log('table refreshed');\r\n        openAlertBar('success', 'Intake table refreshed');\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('table refresh fail', errorMessage);\r\n          openAlertBar('error', `Failed to refresh intake table. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  }\r\n\r\n  useEffect(refreshTable, []);\r\n\r\n  const handleRequestSort = (_, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(row => row[\"row\"]);\r\n      setSelected(newSelecteds);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (_, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const onDeleteRows = () => {\r\n    if (selected.length > 0) {\r\n      let deletePromises = [];\r\n\r\n      selected.forEach(rowNumber => deletePromises.push(deleteRow(rowNumber)));\r\n\r\n      Promise.all(deletePromises)\r\n        .then(() => {\r\n          refreshTable();\r\n          console.log(`deleted rows: ${selected}`);\r\n          openAlertBar('success', `Deleted rows: ${selected}`);\r\n        })\r\n        .catch(err => {\r\n          getErrorMessage(err).then(errorMessage => {\r\n            console.log('delete rows fail', errorMessage);\r\n            openAlertBar('error', `Failed to delete rows. Error message: ${errorMessage}`);\r\n          });\r\n        })\r\n        .finally(() => setSelected([]));\r\n    } else {\r\n      console.log('no rows to delete');\r\n      openAlertBar('error', 'No rows to delete');\r\n    }\r\n  };\r\n\r\n  const onEditRow = newRow => {\r\n    if (selected.length === 1) {\r\n      editRow(newRow)\r\n        .then(() => {\r\n          refreshTable();\r\n          console.log(`edited row: ${selected}`);\r\n          openAlertBar('success', `Edited row: ${selected}`);\r\n        })\r\n        .catch(err => {\r\n          getErrorMessage(err).then(errorMessage => {\r\n            console.log('edit row fail', errorMessage);\r\n            openAlertBar('error', `Failed to edit row. Error message: ${errorMessage}`);\r\n          });\r\n        })\r\n        .finally(() => setSelected([]));\r\n    } else {\r\n      console.log('cannot edit more than 1 row');\r\n      openAlertBar('error', 'Cannot edit more than one row');\r\n    }\r\n  }\r\n\r\n  const onFilterSubmit = query => {\r\n    filterIntakeTable(query.where)\r\n      .then(rows => {\r\n        setRows(rows);\r\n        setShownColumns(query.columns);\r\n\r\n        console.log('filtered', rows);\r\n        openAlertBar('success', 'Filtered intake table');\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('filter fail', errorMessage);\r\n          openAlertBar('error', `Failed to filter intake table. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  }\r\n\r\n  if (rows.length === 0) {\r\n    return (\r\n      <Container>\r\n        <IntakeTableToolbar numSelected={selected.length} />\r\n        <IntakeTableFilters onSubmit={onFilterSubmit} allColumns={allColumns} />\r\n        <Typography variant=\"body1\" align=\"center\">No data.</Typography>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <IntakeTableToolbar\r\n          numSelected={selected.length}\r\n          onDeleteRows={onDeleteRows}\r\n          onEditRow={() => setEditDialogOpen(true)}\r\n          onRefreshTable={refreshTable} />\r\n        <IntakeTableFilters onSubmit={onFilterSubmit} allColumns={allColumns} />\r\n        <TableContainer>\r\n          <Table\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"Data table\"\r\n          >\r\n            <IntakeTableHead\r\n              headers={shownHeaders}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) =>\r\n                  <IntakeTableRow\r\n                    key={index}\r\n                    onRowClick={event => handleRowClick(event, row[\"row\"])}\r\n                    isRowSelected={isSelected(row[\"row\"])}\r\n                    index={index}\r\n                    row={row}\r\n                    shownColumns={shownColumns}\r\n                  />\r\n                )}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n        <IntakeRowForm\r\n          isDialog={true}\r\n          row={getRow(selected[0])}\r\n          dialogOpen={editDialogOpen}\r\n          onDialogClose={() => setEditDialogOpen(false)}\r\n          onSubmit={onEditRow}\r\n        ></IntakeRowForm>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport IntakeTable from './IntakeTable';\r\n\r\nexport default function SeeTheData() {\r\n  return (\r\n    <IntakeTable />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function VisualizeWithTableau() {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <iframe title=\"youtube\" width=\"100%\" height=\"500\" src=\"https://www.youtube-nocookie.com/embed/dQw4w9WgXcQ\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n      <Button style={{ marginRight: '1rem' }} variant=\"outlined\" color=\"primary\">\r\n        Download this workbook\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Open in Tableau Desktop\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, TextField, Typography } from '@material-ui/core';\r\n\r\nexport default function LoginForm(props) {\r\n  const { onSubmit } = props;\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (email.length > 0 && password.length > 0) {\r\n      const userCredentials = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n\r\n      onSubmit(userCredentials)\r\n    } else {\r\n      console.log('must enter both email and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} aria-label=\"login-form\" >\r\n      <Typography\r\n        style={{ marginTop: '1.5rem' }}\r\n        variant=\"h6\"\r\n        align=\"center\"\r\n      >\r\n        Login\r\n      </Typography>\r\n      <TextField\r\n        style={{ display: 'block' }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        onChange={e => setEmail(e.target.value)}\r\n      />\r\n      <TextField\r\n        style={{ display: 'block' }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        onChange={e => setPassword(e.target.value)}\r\n      />\r\n      <Button\r\n        style={{ float: 'right' }}\r\n        type=\"submit\"\r\n        onClick={onFormSubmit}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form >\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { AlertBarProvider } from './AlertBarContext';\r\nimport { UserProvider } from './UserContext';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n    secondary: {\r\n      main: grey[600],\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <AlertBarProvider>\r\n      <UserProvider>\r\n        <App />\r\n      </UserProvider>\r\n    </AlertBarProvider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState, useContext } from 'react';\r\nimport { Grid, Button, Typography, Container } from '@material-ui/core';\r\nimport Nav from './Nav';\r\nimport Title from './Title';\r\nimport WhatsNew from './WhatsNew';\r\nimport AddNewEntries from './AddNewEntries';\r\nimport SeeTheData from './SeeTheData';\r\nimport VisualizeWithTableau from './VisualizeWithTableau';\r\nimport LoginForm from './LoginForm';\r\nimport { login, logout, getErrorMessage, enableReadOnly } from './ApiCaller';\r\nimport { AlertBarContext } from './AlertBarContext';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport default function App() {\r\n  const [navValue, setNavValue] = useState(2);\r\n  const [user, userDispatch] = useContext(UserContext);\r\n  const openAlertBar = useContext(AlertBarContext);\r\n\r\n  const onLogin = credentials => {\r\n    login(credentials)\r\n      .then(res => {\r\n        userDispatch({\r\n          type: 'login',\r\n          name: res.name,\r\n          isAdmin: res.is_admin,\r\n          isReadOnly: res.read_only,\r\n        });\r\n\r\n        console.log('logged in', res);\r\n        openAlertBar('success', `Logged in as ${res.name}.`);\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('log in fail', errorMessage);\r\n          openAlertBar(`Failed to log in. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  };\r\n\r\n  const onLogout = () => {\r\n    logout()\r\n      .then(res => {\r\n        userDispatch({ type: 'logout' });\r\n\r\n        console.log('logged out', res);\r\n        openAlertBar('success', 'Logged out.');\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('log out fail', errorMessage);\r\n          openAlertBar('warning', `Failed to log out. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  }\r\n\r\n  const onEnableReadOnly = () => {\r\n    enableReadOnly()\r\n      .then(_ => {\r\n        userDispatch({ type: 'enable-readonly' });\r\n        console.log('enabled read-only mode');\r\n        openAlertBar('success', 'Enabled read-only mode');\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('enable read-only mode fail', errorMessage);\r\n          openAlertBar('warning', `Failed to enable read-only mode. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  }\r\n\r\n  const onDisableReadOnly = () => {\r\n    enableReadOnly()\r\n      .then(_ => {\r\n        userDispatch({ type: 'disable-readonly' });\r\n        console.log('disabled read-only mode');\r\n        openAlertBar('success', 'Disabled read-only mode');\r\n      })\r\n      .catch(err => {\r\n        getErrorMessage(err).then(errorMessage => {\r\n          console.log('disable read-only mode fail', errorMessage);\r\n          openAlertBar('warning', `Failed to disable read-only mode. Error message: ${errorMessage}`);\r\n        });\r\n      });\r\n  }\r\n\r\n  const onNavChange = (_, newValue) => {\r\n    setNavValue(newValue);\r\n  }\r\n\r\n  const getComponentMatchingNavValue = () => {\r\n    switch (navValue) {\r\n      case 0:\r\n        return <WhatsNew />;\r\n      case 1:\r\n        return <AddNewEntries />;\r\n      case 2:\r\n        return <SeeTheData />;\r\n      case 3:\r\n        return <VisualizeWithTableau />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (user.isLoggedIn) {\r\n    return (\r\n      <Container>\r\n        <Grid container item xs={12} justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Title />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\" align=\"right\">Hi there, {user.name}</Typography>\r\n            <Button style={{ float: 'right' }} onClick={onLogout}>Logout</Button>\r\n            {user.isReadOnly ?\r\n              <Button style={{ float: 'right' }} onClick={onDisableReadOnly}>Disable read-only mode</Button> :\r\n              <Button style={{ float: 'right' }} onClick={onEnableReadOnly}>Enable read-only mode</Button>}\r\n          </Grid>\r\n        </Grid>\r\n        <Nav navValue={navValue} onNavChange={onNavChange} />\r\n        {getComponentMatchingNavValue()}\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container maxWidth=\"xs\">\r\n        <Title />\r\n        <LoginForm onSubmit={onLogin} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}